{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/process/browser.js","webpack:///../node_modules/underscore/underscore.js","webpack:///../node_modules/util/util.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/uuid/index.js","webpack:///../dist/lib/Event.js","webpack:///../node_modules/nedb/lib/model.js","webpack:///../node_modules/events/events.js","webpack:///../node_modules/node-libs-browser/node_modules/timers-browserify/main.js","webpack:///../dist/lib/Actor.js","webpack:///../node_modules/async/lib/async.js","webpack:///../dist/lib/Snap.js","webpack:///../dist/lib/index.js","webpack:///../node_modules/binary-search-tree/lib/customUtils.js","webpack:///../node_modules/binary-search-tree/lib/bst.js","webpack:///../node_modules/nedb/lib/indexes.js","webpack:///../node_modules/nedb/browser-version/browser-specific/lib/customUtils.js","webpack:///../dist/lib/eventAlias.js","webpack:///../node_modules/uuid/lib/bytesToUuid.js","webpack:///../node_modules/uuid/lib/rng-browser.js","webpack:///../dist/lib/Domain.js","webpack:///./src/domain.js","webpack:///./src/index.js","webpack:///../dist/lib/cluster/IDManager.js","webpack:///../dist/lib/ActorEventEmitter.js","webpack:///../dist/lib/Role.js","webpack:///../node_modules/ms/index.js","webpack:///../node_modules/debug/src/debug.js","webpack:///../node_modules/debug/src/browser.js","webpack:///../dist/lib/EventBus.js","webpack:///../node_modules/assert/assert.js","webpack:///../node_modules/any-promise/loader.js","webpack:///../node_modules/any-promise/register-shim.js","webpack:///../node_modules/any-promise/index.js","webpack:///../node_modules/thenify/index.js","webpack:///../node_modules/nedb/lib/cursor.js","webpack:///../node_modules/path-browserify/index.js","webpack:///../node_modules/localforage/dist/localforage.js","webpack:///../node_modules/nedb/browser-version/browser-specific/lib/storage.js","webpack:///../node_modules/nedb/lib/persistence.js","webpack:///../node_modules/binary-search-tree/lib/avltree.js","webpack:///../node_modules/binary-search-tree/index.js","webpack:///../node_modules/nedb/lib/executor.js","webpack:///../node_modules/util/node_modules/inherits/inherits_browser.js","webpack:///../node_modules/util/support/isBufferBrowser.js","webpack:///../node_modules/nedb/lib/datastore.js","webpack:///../node_modules/nedb/index.js","webpack:///../node_modules/nedb-promise/index.js","webpack:///../dist/lib/DefaultEventStore.js","webpack:///../dist/lib/reborn.js","webpack:///../node_modules/setimmediate/setImmediate.js","webpack:///../dist/lib/Repository.js","webpack:///../node_modules/querystring-es3/encode.js","webpack:///../node_modules/querystring-es3/decode.js","webpack:///../node_modules/querystring-es3/index.js","webpack:///../node_modules/uuid/v4.js","webpack:///../node_modules/uuid/v1.js","webpack:///../dist/lib/Service.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","root","previousUnderscore","_","breaker","ArrayProto","ObjProto","FuncProto","Function","slice","toString","nativeForEach","forEach","nativeMap","map","nativeReduce","reduce","nativeReduceRight","reduceRight","nativeFilter","filter","nativeEvery","every","nativeSome","some","nativeIndexOf","indexOf","nativeLastIndexOf","lastIndexOf","nativeIsArray","isArray","nativeKeys","keys","nativeBind","bind","obj","_wrapped","VERSION","each","iterator","context","key","has","collect","results","index","list","reduceError","foldl","inject","memo","initial","TypeError","foldr","find","detect","result","any","select","reject","all","identity","contains","include","target","invoke","method","isFunc","isFunction","pluck","where","attrs","first","isEmpty","findWhere","max","Math","Infinity","computed","min","shuffle","rand","shuffled","random","lookupIterator","sortBy","criteria","sort","left","right","a","b","group","behavior","groupBy","countBy","sortedIndex","low","high","mid","toArray","values","size","head","take","guard","last","rest","tail","drop","compact","flatten","input","shallow","output","without","difference","uniq","unique","isSorted","seen","union","intersection","item","other","zip","from","hasIndex","range","start","stop","step","ceil","idx","func","partial","bindAll","funcs","functions","f","memoize","hasher","delay","wait","defer","throttle","previous","later","Date","now","remaining","debounce","immediate","callNow","ran","wrap","wrapper","compose","after","times","pairs","invert","methods","names","extend","source","prop","pick","copy","omit","defaults","clone","isObject","tap","interceptor","eq","aStack","bStack","className","String","global","multiline","ignoreCase","aCtor","constructor","bCtor","pop","isEqual","isString","isElement","nodeType","isArguments","isFinite","isNaN","parseFloat","isNumber","isBoolean","isNull","isUndefined","noConflict","accum","floor","entityMap","escape","&","<",">","\"","'","/","unescape","entityRegexes","RegExp","join","string","replace","match","mixin","idCounter","uniqueId","prefix","id","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n","\t"," "," ","escaper","template","text","data","settings","render","matcher","offset","variable","chain","_chain","formatRegExp","format","objects","inspect","str","x","Number","JSON","stringify","deprecate","fn","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugEnviron","debugs","opts","ctx","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","ret","primitive","simple","formatPrimitive","visibleKeys","hash","val","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","formatProperty","formatArray","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","set","split","line","substr","ar","arg","re","objectToString","pad","debuglog","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","undefined","null","date","regexp","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","add","g","eval","window","v1","v4","uuid","updatedDataKey","Symbol","Event","[object Object]","actor","type","sagaId","direct","roleName","actorId","actorType","json","toJSON","updatedData","v","event","parse","__proto__","default","util","modifierFunctions","lastStepModifierFunctions","comparisonFunctions","logicalOperators","arrayComparisonFunctions","checkKey","k","checkObject","deepCopy","strictKeys","res","isPrimitiveType","compareNSB","compareArrays","comp","compareThings","_compareStrings","aKeys","bKeys","compareStrings","getTime","getDotValue","field","objs","fieldParts","parseInt","areThingsEqual","areComparable","query","queryKeys","queryKey","queryValue","matchQueryPart","needAKey","treatObjAsValue","firstChars","dollarFirstChars","objValue","$regex","$set","$unset","$push","$slice","$each","end","$addToSet","addToSet","$pop","$pull","arr","splice","$inc","$max","$min","modifier","createModifierFunction","$lt","$lte","$gt","$gte","$ne","$in","$nin","$exists","exists","$size","$elemMatch","$or","$and","$not","$where","serialize","$$date","deserialize","rawData","modify","updateQuery","newDoc","modifiers","_id","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","er","handler","err","listener","newListener","fired","position","listenerCount","evlistener","emitter","scope","self","Timeout","clearFn","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","uncommittedEvents","for","setdata","datakey","isLock","lockData","latestLockTime","isAlive","getType","updater","listenerType","listenerId","handleMethodName","$","__WEBPACK_AMD_DEFINE_RESULT__","previous_async","async","only_once","called","_each","_map","_keys","callback","completed","eachSeries","iterate","forEachSeries","eachLimit","limit","_eachLimit","forEachLimit","started","running","replenish","doParallel","doSeries","_asyncMap","eachfn","mapSeries","mapLimit","_mapLimit","doParallelLimit","reversed","reverse","_filter","filterSeries","selectSeries","_reject","rejectSeries","_detect","main_callback","detectSeries","auto","tasks","unshift","taskComplete","task","taskCallback","safeResults","rkey","requires","abs","ready","waterfall","wrapIterator","next","_parallel","parallel","parallelLimit","series","makeCallback","_concat","cb","y","concatSeries","whilst","doWhilst","until","doUntil","worker","concurrency","_insert","q","pos","saturated","workers","empty","drain","shift","cargo","payload","working","ts","ds","_console_fn","queues","memoized","unmemoized","unmemoize","count","counter","timesSeries","fns","that","newargs","nextargs","_applyEach","go","applyEach","applyEachSeries","forever","Snap","latestEventIndex","snap","Domain_1","Domain","Actor_1","Actor","Event_1","Domain_2","domain","getRandomArray","defaultCompareKeysFunction","defaultCheckValueEquality","customUtils","BinarySearchTree","options","parent","compareKeys","checkValueEquality","append","toAppend","getMaxKeyDescendant","getMaxKey","getMinKeyDescendant","getMinKey","checkAllNodesFullfillCondition","checkNodeOrdering","checkInternalPointers","checkIsBST","getNumberOfKeys","createSimilar","createLeftChild","leftChild","createRightChild","rightChild","insert","errorType","search","getLowerBoundMatcher","getUpperBoundMatcher","betweenBounds","lbm","ubm","deleteIfLeaf","deleteIfOnlyOneChild","child","delete","replaceWith","newData","executeOnEveryNode","prettyPrint","printData","spacing","AVLTree","model","projectForUnique","elt","Index","fieldName","sparse","treeOptions","reset","tree","doc","failingI","insertMultipleDocs","docs","remove","_key","update","oldDoc","updateMultipleDocs","revertUpdate","revert","pair","getMatching","_res","getBetweenBounds","getAll","node","uid","uint8","temp","num","lookup","extraBytes","byteArrayToBase64","bytes","randomBytes","getAlias","byteToHex","buf","bth","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rnds","Service_1","eventAlias_1","Repository_1","DefaultEventStore_1","EventBus_1","getActorProxy","Role_1","ActorEventEmitter_1","IDManager_1","roleMap","Map","ActorClassMap","eventstore","EventStore","repositorieMap","eventbus","EventBus","register","plugin","roles","repo","role","ActorClass","createBefor","create","getNativeActor","proxy","Proxy","Reflect","member","rn","cxt","Promise","resolve","iservice","nativeCreateActor","service","rollback","then","catch","Classes","Class","alias","handle","getCacheActorIds","supportedActorNames","types","lib","super","changename","document","body","innerHTML","ids","listenerMap","act","includes","h","plural","ms","exec","toLowerCase","long","round","fmtShort","prevTime","createDebug","namespace","debug","enabled","curr","diff","coerce","formatter","formatters","formatArgs","useColors","color","charCodeAt","selectColor","init","stack","message","disable","enable","namespaces","save","skips","humanize","load","storage","DEBUG","lastC","removeItem","documentElement","WebkitAppearance","firebug","exception","table","navigator","userAgent","$1","chrome","local","localStorage","localstorage","j","events_1","Snap_1","lockSet","Set","subscribeRepo","events","getLatestEvent","startIndex","evt","saveEvents","getLatestSnapshot","lastEvent","lastEventId","newSnap","createSnap","publish","killSaga","findEventsBySagaId","removeEventsBySagaId","clear","compare","Buffer","_isBuffer","hasOwn","pSlice","functionsHaveNames","pToString","isView","arrbuf","ArrayBuffer","DataView","buffer","assert","ok","regex","getName","truncate","something","rawname","fail","actual","expected","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","lastIndex","Float32Array","Float64Array","actualIndex","actualVisitedObjects","getPrototypeOf","aIsArgs","bIsArgs","ka","objectKeys","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","block","_tryBlock","userProvidedMessage","isUnwantedException","isUnexpectedException","generatedMessage","captureStackTrace","out","fn_name","next_line","substring","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","registered","loadImplementation","implementation","registerGlobal","thenify","$$__fn__$$","createWrapper","createCallback","multiArgs","withCallback","Cursor","db","execFn","_limit","skip","_skip","sortQuery","_sort","projection","_projection","project","candidates","keepId","action","candidate","toPush","_exec","_callback","added","skipped","getCandidates","direction","criterion","executor","normalizeArray","parts","allowAboveRoot","up","splitPathRe","splitPath","filename","xs","resolvedPath","resolvedAbsolute","path","charAt","normalize","isAbsolute","trailingSlash","paths","relative","to","trim","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","basename","ext","extname","require","t","u","code","1","_dereq_","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","element","createTextNode","observe","characterData","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","appendChild","channel","port1","onmessage","port2","postMessage","oldQueue","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","getThen","thenable","onError","onSuccess","tryCatch","status","reason","iterable","resolved","allResolver","outValue","race","response","3","4","_typeof","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","properties","Blob","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","warn","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","matchedEdge","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_rejectReadiness","_getConnection","upgradeNeeded","forages","dbArgs","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","arrayBuff","bin","_binStringToArrayBuffer","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","initPromises","ignoreErrors","_defaultConfig","_support","isSafari","openDatabase","platform","hasFetch","fetch","IDBKeyRange","isIndexedDBValid","store","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","advanced","advance","dropInstance","currentConfig","config","isCurrentDb","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","_forage","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","bufferToString","base64String","localforageSerializer","valueType","fileReader","onload","readAsArrayBuffer","blobType","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","SYNTAX_ERR","rows","webSQLStorage","dbInfoPromise","description","serializer","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","searchElement","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","isRequired","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","localforage","writeFile","contents","rename","newFilename","crashSafeWriteFile","appendFile","readFile","unlink","mkdirp","ensureDatafileIntegrity","Persistence","randomString","inMemoryOnly","corruptAlertThreshold","afterSerialization","beforeDeserialization","nodeWebkitAppName","getNWAppFilename","ensureDirectoryExists","appName","relativeFilename","home","LOCALAPPDATA","APPDATA","HOME","persistCachedDatabase","toPersist","getAllData","indexes","$$indexCreated","compactDatafile","setAutocompactionInterval","interval","realInterval","stopAutocompaction","autocompactionIntervalId","persistNewState","newDocs","treatRawData","dataById","tdata","corruptItems","$$deleted","$$indexRemoved","loadDatabase","resetIndexes","treatedData","persistence","processBuffer","_AVLTree","checkHeightCorrect","leftH","rightH","height","balanceFactor","checkBalanceFactors","checkIsAVLT","super_","rightRotation","ah","bh","ch","leftRotation","rightTooSmall","leftTooSmall","rebalanceAlongPath","rotated","newRoot","insertPath","currentNode","newTree","deletePath","Executor","newArguments","lastArg","forceQueuing","ctor","superCtor","writable","TempCtor","fill","readUInt8","Datastore","autoload","timestampData","ttlIndexes","ensureIndex","missingFieldName","expireAfterSeconds","removeIndex","addToIndexes","failingIndex","removeFromIndexes","updateIndexes","dontExpireStaleDocs","usableQueryKeys","indexNames","expiredDocsIds","validDocs","ttlIndexesFieldNames","valid","_remove","preparedDoc","prepareDocumentForInsertion","_insertInCache","createNewId","tentativeId","createdAt","updatedAt","_insertMultipleDocsInCache","preparedDocs","findOne","_update","multi","upsert","numReplaced","toBeInserted","modifiedDoc","modifications","updatedDocs","returnUpdatedDocs","updatedDocsDC","numRemoved","removedDocs","NedbDatastore","fromInstance","nedbInstance","newDB","nedb","cfind","projections","cfindOne","ccount","datastore","snaps","sagas","getSaga","existSaga","done","alive","eventsJSONArr","snapId","getSnapshotById","loadEvents","registerImmediate","html","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","canUsePostMessage","script","addEventListener","attachEvent","reborn_1","cache","getSnapshotByIndex","getEvents","_snap","_index","_validateIndex","_get","getFromCache","getEventsBySnapshot","assign","stringifyPrimitive","ks","encodeURIComponent","qs","maxKeys","kstr","vstr","decodeURIComponent","decode","encode","rng","bytesToUuid","ii","_nodeId","_clockseq","_lastMSecs","_lastNSecs","clockseq","seedBytes","nsecs","dt","tl","tmh","bus","getActor","createActor","lockMode","sagaMode","applied","_event","handles","tryLock","lock","actorLock","subscribe","unsubscribe","getHistory"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","//     Underscore.js 1.4.4\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `global` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push             = ArrayProto.push,\n      slice            = ArrayProto.slice,\n      concat           = ArrayProto.concat,\n      toString         = ObjProto.toString,\n      hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.4.4';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, l = obj.length; i < l; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      for (var key in obj) {\n        if (_.has(obj, key)) {\n          if (iterator.call(context, obj[key], key, obj) === breaker) return;\n        }\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results[results.length] = value;\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? null : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See: https://bugs.webkit.org/show_bug.cgi?id=80797\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed >= result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array.\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value : value,\n        index : index,\n        criteria : iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index < right.index ? -1 : 1;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(obj, value, context, behavior) {\n    var result = {};\n    var iterator = lookupIterator(value || _.identity);\n    each(obj, function(value, index) {\n      var key = iterator.call(context, value, index, obj);\n      behavior(result, key, value);\n    });\n    return result;\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key, value) {\n      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n    });\n  };\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = function(obj, value, context) {\n    return group(obj, value, context, function(result, key) {\n      if (!_.has(result, key)) result[key] = 0;\n      result[key]++;\n    });\n  };\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely convert anything iterable into a real, live array.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n != null) && !guard) {\n      return slice.call(array, Math.max(array.length - n, 0));\n    } else {\n      return array[array.length - 1];\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    each(input, function(value) {\n      if (_.isArray(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Return a completely flattened version of an array.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(concat.apply(ArrayProto, arguments));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var args = slice.call(arguments);\n    var length = _.max(_.pluck(args, 'length'));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(args, \"\" + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, l = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < l; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var len = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(len);\n\n    while(idx < len) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    var args = slice.call(arguments, 2);\n    return function() {\n      return func.apply(context, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) funcs = _.functions(obj);\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time.\n  _.throttle = function(func, wait) {\n    var context, args, timeout, result;\n    var previous = 0;\n    var later = function() {\n      previous = new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n    return function() {\n      var context = this, args = arguments;\n      var later = function() {\n        timeout = null;\n        if (!immediate) result = func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    if (times <= 0) return func();\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var values = [];\n    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var pairs = [];\n    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] == null) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Objects with different constructors are not equivalent, but `Object`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n        return false;\n      }\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(n);\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;',\n      '/': '&#x2F;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named property is a function then invoke it;\n  // otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return null;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name){\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = require('uuid').v1;\nconst qs = require('querystring');\nconst updatedDataKey = Symbol();\nclass Event {\n    constructor(actor, data, type, method, sagaId, direct = false, roleName) {\n        this.data = data;\n        this.type = type;\n        this.method = method;\n        this.sagaId = sagaId;\n        this.direct = direct;\n        this.roleName = roleName;\n        this.index = 0;\n        this[updatedDataKey] = null;\n        this.id = uuid();\n        this.actorId = actor.id;\n        this.actorType = actor.type;\n        this.date = new Date();\n    }\n    get json() {\n        return Event.toJSON(this);\n    }\n    get updatedData() {\n        return this[updatedDataKey];\n    }\n    set updatedData(v) {\n        if (this[updatedDataKey])\n            throw new Error(\"only set once.\");\n        this[updatedDataKey] = v;\n    }\n    static toJSON(event) {\n        let json = JSON.parse(JSON.stringify(event));\n        json.updatedData = event.updatedData;\n        return json;\n    }\n    static parse(data) {\n        let event = JSON.parse(JSON.stringify(data));\n        let updatedData = event.updatedData;\n        delete event.updatedData;\n        event[updatedDataKey] = updatedData;\n        event.__proto__ = Event.prototype;\n        return event;\n    }\n}\nexports.default = Event;\n//# sourceMappingURL=Event.js.map","/**\n * Handle models (i.e. docs)\n * Serialization/deserialization\n * Copying\n * Querying, update\n */\n\nvar util = require('util')\n  , _ = require('underscore')\n  , modifierFunctions = {}\n  , lastStepModifierFunctions = {}\n  , comparisonFunctions = {}\n  , logicalOperators = {}\n  , arrayComparisonFunctions = {}\n  ;\n\n\n/**\n * Check a key, throw an error if the key is non valid\n * @param {String} k key\n * @param {Model} v value, needed to treat the Date edge case\n * Non-treatable edge cases here: if part of the object if of the form { $$date: number } or { $$deleted: true }\n * Its serialized-then-deserialized version it will transformed into a Date object\n * But you really need to want it to trigger such behaviour, even when warned not to use '$' at the beginning of the field names...\n */\nfunction checkKey (k, v) {\n  if (typeof k === 'number') {\n    k = k.toString();\n  }\n\n  if (k[0] === '$' && !(k === '$$date' && typeof v === 'number') && !(k === '$$deleted' && v === true) && !(k === '$$indexCreated') && !(k === '$$indexRemoved')) {\n    throw new Error('Field names cannot begin with the $ character');\n  }\n\n  if (k.indexOf('.') !== -1) {\n    throw new Error('Field names cannot contain a .');\n  }\n}\n\n\n/**\n * Check a DB object and throw an error if it's not valid\n * Works by applying the above checkKey function to all fields recursively\n */\nfunction checkObject (obj) {\n  if (util.isArray(obj)) {\n    obj.forEach(function (o) {\n      checkObject(o);\n    });\n  }\n\n  if (typeof obj === 'object' && obj !== null) {\n    Object.keys(obj).forEach(function (k) {\n      checkKey(k, obj[k]);\n      checkObject(obj[k]);\n    });\n  }\n}\n\n\n/**\n * Serialize an object to be persisted to a one-line string\n * For serialization/deserialization, we use the native JSON parser and not eval or Function\n * That gives us less freedom but data entered in the database may come from users\n * so eval and the like are not safe\n * Accepted primitive types: Number, String, Boolean, Date, null\n * Accepted secondary types: Objects, Arrays\n */\nfunction serialize (obj) {\n  var res;\n\n  res = JSON.stringify(obj, function (k, v) {\n    checkKey(k, v);\n\n    if (v === undefined) { return undefined; }\n    if (v === null) { return null; }\n\n    // Hackish way of checking if object is Date (this way it works between execution contexts in node-webkit).\n    // We can't use value directly because for dates it is already string in this function (date.toJSON was already called), so we use this\n    if (typeof this[k].getTime === 'function') { return { $$date: this[k].getTime() }; }\n\n    return v;\n  });\n\n  return res;\n}\n\n\n/**\n * From a one-line representation of an object generate by the serialize function\n * Return the object itself\n */\nfunction deserialize (rawData) {\n  return JSON.parse(rawData, function (k, v) {\n    if (k === '$$date') { return new Date(v); }\n    if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || v === null) { return v; }\n    if (v && v.$$date) { return v.$$date; }\n\n    return v;\n  });\n}\n\n\n/**\n * Deep copy a DB object\n * The optional strictKeys flag (defaulting to false) indicates whether to copy everything or only fields\n * where the keys are valid, i.e. don't begin with $ and don't contain a .\n */\nfunction deepCopy (obj, strictKeys) {\n  var res;\n\n  if ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       (util.isDate(obj)) ) {\n    return obj;\n  }\n\n  if (util.isArray(obj)) {\n    res = [];\n    obj.forEach(function (o) { res.push(deepCopy(o, strictKeys)); });\n    return res;\n  }\n\n  if (typeof obj === 'object') {\n    res = {};\n    Object.keys(obj).forEach(function (k) {\n      if (!strictKeys || (k[0] !== '$' && k.indexOf('.') === -1)) {\n        res[k] = deepCopy(obj[k], strictKeys);\n      }\n    });\n    return res;\n  }\n\n  return undefined;   // For now everything else is undefined. We should probably throw an error instead\n}\n\n\n/**\n * Tells if an object is a primitive type or a \"real\" object\n * Arrays are considered primitive\n */\nfunction isPrimitiveType (obj) {\n  return ( typeof obj === 'boolean' ||\n       typeof obj === 'number' ||\n       typeof obj === 'string' ||\n       obj === null ||\n       util.isDate(obj) ||\n       util.isArray(obj));\n}\n\n\n/**\n * Utility functions for comparing things\n * Assumes type checking was already done (a and b already have the same type)\n * compareNSB works for numbers, strings and booleans\n */\nfunction compareNSB (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nfunction compareArrays (a, b) {\n  var i, comp;\n\n  for (i = 0; i < Math.min(a.length, b.length); i += 1) {\n    comp = compareThings(a[i], b[i]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  // Common section was identical, longest one wins\n  return compareNSB(a.length, b.length);\n}\n\n\n/**\n * Compare { things U undefined }\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * We need to compare with undefined as it will be used in indexes\n * In the case of objects and arrays, we deep-compare\n * If two objects dont have the same type, the (arbitrary) type hierarchy is: undefined, null, number, strings, boolean, dates, arrays, objects\n * Return -1 if a < b, 1 if a > b and 0 if a = b (note that equality here is NOT the same as defined in areThingsEqual!)\n *\n * @param {Function} _compareStrings String comparing function, returning -1, 0 or 1, overriding default string comparison (useful for languages with accented letters)\n */\nfunction compareThings (a, b, _compareStrings) {\n  var aKeys, bKeys, comp, i\n    , compareStrings = _compareStrings || compareNSB;\n\n  // undefined\n  if (a === undefined) { return b === undefined ? 0 : -1; }\n  if (b === undefined) { return a === undefined ? 0 : 1; }\n\n  // null\n  if (a === null) { return b === null ? 0 : -1; }\n  if (b === null) { return a === null ? 0 : 1; }\n\n  // Numbers\n  if (typeof a === 'number') { return typeof b === 'number' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'number') { return typeof a === 'number' ? compareNSB(a, b) : 1; }\n\n  // Strings\n  if (typeof a === 'string') { return typeof b === 'string' ? compareStrings(a, b) : -1; }\n  if (typeof b === 'string') { return typeof a === 'string' ? compareStrings(a, b) : 1; }\n\n  // Booleans\n  if (typeof a === 'boolean') { return typeof b === 'boolean' ? compareNSB(a, b) : -1; }\n  if (typeof b === 'boolean') { return typeof a === 'boolean' ? compareNSB(a, b) : 1; }\n\n  // Dates\n  if (util.isDate(a)) { return util.isDate(b) ? compareNSB(a.getTime(), b.getTime()) : -1; }\n  if (util.isDate(b)) { return util.isDate(a) ? compareNSB(a.getTime(), b.getTime()) : 1; }\n\n  // Arrays (first element is most significant and so on)\n  if (util.isArray(a)) { return util.isArray(b) ? compareArrays(a, b) : -1; }\n  if (util.isArray(b)) { return util.isArray(a) ? compareArrays(a, b) : 1; }\n\n  // Objects\n  aKeys = Object.keys(a).sort();\n  bKeys = Object.keys(b).sort();\n\n  for (i = 0; i < Math.min(aKeys.length, bKeys.length); i += 1) {\n    comp = compareThings(a[aKeys[i]], b[bKeys[i]]);\n\n    if (comp !== 0) { return comp; }\n  }\n\n  return compareNSB(aKeys.length, bKeys.length);\n}\n\n\n\n// ==============================================================\n// Updating documents\n// ==============================================================\n\n/**\n * The signature of modifier functions is as follows\n * Their structure is always the same: recursively follow the dot notation while creating\n * the nested documents if needed, then apply the \"last step modifier\"\n * @param {Object} obj The model to modify\n * @param {String} field Can contain dots, in that case that means we will set a subfield recursively\n * @param {Model} value\n */\n\n/**\n * Set a field to a new value\n */\nlastStepModifierFunctions.$set = function (obj, field, value) {\n  obj[field] = value;\n};\n\n\n/**\n * Unset a field\n */\nlastStepModifierFunctions.$unset = function (obj, field, value) {\n  delete obj[field];\n};\n\n\n/**\n * Push an element to the end of an array field\n * Optional modifier $each instead of value to push several values\n * Optional modifier $slice to slice the resulting array, see https://docs.mongodb.org/manual/reference/operator/update/slice/\n * Différeence with MongoDB: if $slice is specified and not $each, we act as if value is an empty array\n */\nlastStepModifierFunctions.$push = function (obj, field, value) {\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $push an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$slice && value.$each === undefined) {\n    value.$each = [];\n  }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length >= 3 || (Object.keys(value).length === 2 && value.$slice === undefined)) { throw new Error(\"Can only use $slice in cunjunction with $each when $push to array\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      obj[field].push(v);\n    });\n\n    if (value.$slice === undefined || typeof value.$slice !== 'number') { return; }\n\n    if (value.$slice === 0) {\n      obj[field] = [];\n    } else {\n      var start, end, n = obj[field].length;\n      if (value.$slice < 0) {\n        start = Math.max(0, n + value.$slice);\n        end = n;\n      } else if (value.$slice > 0) {\n        start = 0;\n        end = Math.min(n, value.$slice);\n      }\n      obj[field] = obj[field].slice(start, end);\n    }\n  } else {\n    obj[field].push(value);\n  }\n};\n\n\n/**\n * Add an element to an array field only if it is not already in it\n * No modification if the element is already in the array\n * Note that it doesn't check whether the original array contains duplicates\n */\nlastStepModifierFunctions.$addToSet = function (obj, field, value) {\n  var addToSet = true;\n\n  // Create the array if it doesn't exist\n  if (!obj.hasOwnProperty(field)) { obj[field] = []; }\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $addToSet an element on non-array values\"); }\n\n  if (value !== null && typeof value === 'object' && value.$each) {\n    if (Object.keys(value).length > 1) { throw new Error(\"Can't use another field in conjunction with $each\"); }\n    if (!util.isArray(value.$each)) { throw new Error(\"$each requires an array value\"); }\n\n    value.$each.forEach(function (v) {\n      lastStepModifierFunctions.$addToSet(obj, field, v);\n    });\n  } else {\n    obj[field].forEach(function (v) {\n      if (compareThings(v, value) === 0) { addToSet = false; }\n    });\n    if (addToSet) { obj[field].push(value); }\n  }\n};\n\n\n/**\n * Remove the first or last element of an array\n */\nlastStepModifierFunctions.$pop = function (obj, field, value) {\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pop an element from non-array values\"); }\n  if (typeof value !== 'number') { throw new Error(value + \" isn't an integer, can't use it with $pop\"); }\n  if (value === 0) { return; }\n\n  if (value > 0) {\n    obj[field] = obj[field].slice(0, obj[field].length - 1);\n  } else {\n    obj[field] = obj[field].slice(1);\n  }\n};\n\n\n/**\n * Removes all instances of a value from an existing array\n */\nlastStepModifierFunctions.$pull = function (obj, field, value) {\n  var arr, i;\n\n  if (!util.isArray(obj[field])) { throw new Error(\"Can't $pull an element from non-array values\"); }\n\n  arr = obj[field];\n  for (i = arr.length - 1; i >= 0; i -= 1) {\n    if (match(arr[i], value)) {\n      arr.splice(i, 1);\n    }\n  }\n};\n\n\n/**\n * Increment a numeric field's value\n */\nlastStepModifierFunctions.$inc = function (obj, field, value) {\n  if (typeof value !== 'number') { throw new Error(value + \" must be a number\"); }\n\n  if (typeof obj[field] !== 'number') {\n    if (!_.has(obj, field)) {\n      obj[field] = value;\n    } else {\n      throw new Error(\"Don't use the $inc modifier on non-number fields\");\n    }\n  } else {\n    obj[field] += value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is greater than the current value of the field\n */\nlastStepModifierFunctions.$max = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') {\n    obj[field] = value;\n  } else if (value > obj[field]) {\n    obj[field] = value;\n  }\n};\n\n/**\n * Updates the value of the field, only if specified field is smaller than the current value of the field\n */\nlastStepModifierFunctions.$min = function (obj, field, value) {\n  if (typeof obj[field] === 'undefined') { \n    obj[field] = value;\n  } else if (value < obj[field]) {\n    obj[field] = value;\n  }\n};\n\n// Given its name, create the complete modifier function\nfunction createModifierFunction (modifier) {\n  return function (obj, field, value) {\n    var fieldParts = typeof field === 'string' ? field.split('.') : field;\n\n    if (fieldParts.length === 1) {\n      lastStepModifierFunctions[modifier](obj, field, value);\n    } else {\n      if (obj[fieldParts[0]] === undefined) {\n        if (modifier === '$unset') { return; }   // Bad looking specific fix, needs to be generalized modifiers that behave like $unset are implemented\n        obj[fieldParts[0]] = {};\n      }\n      modifierFunctions[modifier](obj[fieldParts[0]], fieldParts.slice(1), value);\n    }\n  };\n}\n\n// Actually create all modifier functions\nObject.keys(lastStepModifierFunctions).forEach(function (modifier) {\n  modifierFunctions[modifier] = createModifierFunction(modifier);\n});\n\n\n/**\n * Modify a DB object according to an update query\n */\nfunction modify (obj, updateQuery) {\n  var keys = Object.keys(updateQuery)\n    , firstChars = _.map(keys, function (item) { return item[0]; })\n    , dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; })\n    , newDoc, modifiers\n    ;\n\n  if (keys.indexOf('_id') !== -1 && updateQuery._id !== obj._id) { throw new Error(\"You cannot change a document's _id\"); }\n\n  if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n    throw new Error(\"You cannot mix modifiers and normal fields\");\n  }\n\n  if (dollarFirstChars.length === 0) {\n    // Simply replace the object with the update query contents\n    newDoc = deepCopy(updateQuery);\n    newDoc._id = obj._id;\n  } else {\n    // Apply modifiers\n    modifiers = _.uniq(keys);\n    newDoc = deepCopy(obj);\n    modifiers.forEach(function (m) {\n      var keys;\n\n      if (!modifierFunctions[m]) { throw new Error(\"Unknown modifier \" + m); }\n\n      // Can't rely on Object.keys throwing on non objects since ES6\n      // Not 100% satisfying as non objects can be interpreted as objects but no false negatives so we can live with it\n      if (typeof updateQuery[m] !== 'object') {\n        throw new Error(\"Modifier \" + m + \"'s argument must be an object\");\n      }\n\n      keys = Object.keys(updateQuery[m]);\n      keys.forEach(function (k) {\n        modifierFunctions[m](newDoc, k, updateQuery[m][k]);\n      });\n    });\n  }\n\n  // Check result is valid and return it\n  checkObject(newDoc);\n\n  if (obj._id !== newDoc._id) { throw new Error(\"You can't change a document's _id\"); }\n  return newDoc;\n};\n\n\n// ==============================================================\n// Finding documents\n// ==============================================================\n\n/**\n * Get a value from object with dot notation\n * @param {Object} obj\n * @param {String} field\n */\nfunction getDotValue (obj, field) {\n  var fieldParts = typeof field === 'string' ? field.split('.') : field\n    , i, objs;\n\n  if (!obj) { return undefined; }   // field cannot be empty so that means we should return undefined so that nothing can match\n\n  if (fieldParts.length === 0) { return obj; }\n\n  if (fieldParts.length === 1) { return obj[fieldParts[0]]; }\n\n  if (util.isArray(obj[fieldParts[0]])) {\n    // If the next field is an integer, return only this item of the array\n    i = parseInt(fieldParts[1], 10);\n    if (typeof i === 'number' && !isNaN(i)) {\n      return getDotValue(obj[fieldParts[0]][i], fieldParts.slice(2))\n    }\n\n    // Return the array of values\n    objs = new Array();\n    for (i = 0; i < obj[fieldParts[0]].length; i += 1) {\n       objs.push(getDotValue(obj[fieldParts[0]][i], fieldParts.slice(1)));\n    }\n    return objs;\n  } else {\n    return getDotValue(obj[fieldParts[0]], fieldParts.slice(1));\n  }\n}\n\n\n/**\n * Check whether 'things' are equal\n * Things are defined as any native types (string, number, boolean, null, date) and objects\n * In the case of object, we check deep equality\n * Returns true if they are, false otherwise\n */\nfunction areThingsEqual (a, b) {\n  var aKeys , bKeys , i;\n\n  // Strings, booleans, numbers, null\n  if (a === null || typeof a === 'string' || typeof a === 'boolean' || typeof a === 'number' ||\n      b === null || typeof b === 'string' || typeof b === 'boolean' || typeof b === 'number') { return a === b; }\n\n  // Dates\n  if (util.isDate(a) || util.isDate(b)) { return util.isDate(a) && util.isDate(b) && a.getTime() === b.getTime(); }\n\n  // Arrays (no match since arrays are used as a $in)\n  // undefined (no match since they mean field doesn't exist and can't be serialized)\n  if ((!(util.isArray(a) && util.isArray(b)) && (util.isArray(a) || util.isArray(b))) || a === undefined || b === undefined) { return false; }\n\n  // General objects (check for deep equality)\n  // a and b should be objects at this point\n  try {\n    aKeys = Object.keys(a);\n    bKeys = Object.keys(b);\n  } catch (e) {\n    return false;\n  }\n\n  if (aKeys.length !== bKeys.length) { return false; }\n  for (i = 0; i < aKeys.length; i += 1) {\n    if (bKeys.indexOf(aKeys[i]) === -1) { return false; }\n    if (!areThingsEqual(a[aKeys[i]], b[aKeys[i]])) { return false; }\n  }\n  return true;\n}\n\n\n/**\n * Check that two values are comparable\n */\nfunction areComparable (a, b) {\n  if (typeof a !== 'string' && typeof a !== 'number' && !util.isDate(a) &&\n      typeof b !== 'string' && typeof b !== 'number' && !util.isDate(b)) {\n    return false;\n  }\n\n  if (typeof a !== typeof b) { return false; }\n\n  return true;\n}\n\n\n/**\n * Arithmetic and comparison operators\n * @param {Native value} a Value in the object\n * @param {Native value} b Value in the query\n */\ncomparisonFunctions.$lt = function (a, b) {\n  return areComparable(a, b) && a < b;\n};\n\ncomparisonFunctions.$lte = function (a, b) {\n  return areComparable(a, b) && a <= b;\n};\n\ncomparisonFunctions.$gt = function (a, b) {\n  return areComparable(a, b) && a > b;\n};\n\ncomparisonFunctions.$gte = function (a, b) {\n  return areComparable(a, b) && a >= b;\n};\n\ncomparisonFunctions.$ne = function (a, b) {\n  if (a === undefined) { return true; }\n  return !areThingsEqual(a, b);\n};\n\ncomparisonFunctions.$in = function (a, b) {\n  var i;\n\n  if (!util.isArray(b)) { throw new Error(\"$in operator called with a non-array\"); }\n\n  for (i = 0; i < b.length; i += 1) {\n    if (areThingsEqual(a, b[i])) { return true; }\n  }\n\n  return false;\n};\n\ncomparisonFunctions.$nin = function (a, b) {\n  if (!util.isArray(b)) { throw new Error(\"$nin operator called with a non-array\"); }\n\n  return !comparisonFunctions.$in(a, b);\n};\n\ncomparisonFunctions.$regex = function (a, b) {\n  if (!util.isRegExp(b)) { throw new Error(\"$regex operator called with non regular expression\"); }\n\n  if (typeof a !== 'string') {\n    return false\n  } else {\n    return b.test(a);\n  }\n};\n\ncomparisonFunctions.$exists = function (value, exists) {\n  if (exists || exists === '') {   // This will be true for all values of exists except false, null, undefined and 0\n    exists = true;                 // That's strange behaviour (we should only use true/false) but that's the way Mongo does it...\n  } else {\n    exists = false;\n  }\n\n  if (value === undefined) {\n    return !exists\n  } else {\n    return exists;\n  }\n};\n\n// Specific to arrays\ncomparisonFunctions.$size = function (obj, value) {\n    if (!util.isArray(obj)) { return false; }\n    if (value % 1 !== 0) { throw new Error(\"$size operator called without an integer\"); }\n\n    return (obj.length == value);\n};\ncomparisonFunctions.$elemMatch = function (obj, value) {\n  if (!util.isArray(obj)) { return false; }\n  var i = obj.length;\n  var result = false;   // Initialize result\n  while (i--) {\n    if (match(obj[i], value)) {   // If match for array element, return true\n      result = true;\n      break;\n    }\n  }\n  return result;\n};\narrayComparisonFunctions.$size = true;\narrayComparisonFunctions.$elemMatch = true;\n\n\n/**\n * Match any of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$or = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$or operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (match(obj, query[i])) { return true; }\n  }\n\n  return false;\n};\n\n\n/**\n * Match all of the subqueries\n * @param {Model} obj\n * @param {Array of Queries} query\n */\nlogicalOperators.$and = function (obj, query) {\n  var i;\n\n  if (!util.isArray(query)) { throw new Error(\"$and operator used without an array\"); }\n\n  for (i = 0; i < query.length; i += 1) {\n    if (!match(obj, query[i])) { return false; }\n  }\n\n  return true;\n};\n\n\n/**\n * Inverted match of the query\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$not = function (obj, query) {\n  return !match(obj, query);\n};\n\n\n/**\n * Use a function to match\n * @param {Model} obj\n * @param {Query} query\n */\nlogicalOperators.$where = function (obj, fn) {\n  var result;\n\n  if (!_.isFunction(fn)) { throw new Error(\"$where operator used without a function\"); }\n\n  result = fn.call(obj);\n  if (!_.isBoolean(result)) { throw new Error(\"$where function must return boolean\"); }\n\n  return result;\n};\n\n\n/**\n * Tell if a given document matches a query\n * @param {Object} obj Document to check\n * @param {Object} query\n */\nfunction match (obj, query) {\n  var queryKeys, queryKey, queryValue, i;\n\n  // Primitive query against a primitive type\n  // This is a bit of a hack since we construct an object with an arbitrary key only to dereference it later\n  // But I don't have time for a cleaner implementation now\n  if (isPrimitiveType(obj) || isPrimitiveType(query)) {\n    return matchQueryPart({ needAKey: obj }, 'needAKey', query);\n  }\n\n  // Normal query\n  queryKeys = Object.keys(query);\n  for (i = 0; i < queryKeys.length; i += 1) {\n    queryKey = queryKeys[i];\n    queryValue = query[queryKey];\n\n    if (queryKey[0] === '$') {\n      if (!logicalOperators[queryKey]) { throw new Error(\"Unknown logical operator \" + queryKey); }\n      if (!logicalOperators[queryKey](obj, queryValue)) { return false; }\n    } else {\n      if (!matchQueryPart(obj, queryKey, queryValue)) { return false; }\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Match an object against a specific { key: value } part of a query\n * if the treatObjAsValue flag is set, don't try to match every part separately, but the array as a whole\n */\nfunction matchQueryPart (obj, queryKey, queryValue, treatObjAsValue) {\n  var objValue = getDotValue(obj, queryKey)\n    , i, keys, firstChars, dollarFirstChars;\n\n  // Check if the value is an array if we don't force a treatment as value\n  if (util.isArray(objValue) && !treatObjAsValue) {\n    // If the queryValue is an array, try to perform an exact match\n    if (util.isArray(queryValue)) {\n      return matchQueryPart(obj, queryKey, queryValue, true);\n    }\n\n    // Check if we are using an array-specific comparison function\n    if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue)) {\n      keys = Object.keys(queryValue);\n      for (i = 0; i < keys.length; i += 1) {\n        if (arrayComparisonFunctions[keys[i]]) { return matchQueryPart(obj, queryKey, queryValue, true); }\n      }\n    }\n\n    // If not, treat it as an array of { obj, query } where there needs to be at least one match\n    for (i = 0; i < objValue.length; i += 1) {\n      if (matchQueryPart({ k: objValue[i] }, 'k', queryValue)) { return true; }   // k here could be any string\n    }\n    return false;\n  }\n\n  // queryValue is an actual object. Determine whether it contains comparison operators\n  // or only normal fields. Mixed objects are not allowed\n  if (queryValue !== null && typeof queryValue === 'object' && !util.isRegExp(queryValue) && !util.isArray(queryValue)) {\n    keys = Object.keys(queryValue);\n    firstChars = _.map(keys, function (item) { return item[0]; });\n    dollarFirstChars = _.filter(firstChars, function (c) { return c === '$'; });\n\n    if (dollarFirstChars.length !== 0 && dollarFirstChars.length !== firstChars.length) {\n      throw new Error(\"You cannot mix operators and normal fields\");\n    }\n\n    // queryValue is an object of this form: { $comparisonOperator1: value1, ... }\n    if (dollarFirstChars.length > 0) {\n      for (i = 0; i < keys.length; i += 1) {\n        if (!comparisonFunctions[keys[i]]) { throw new Error(\"Unknown comparison function \" + keys[i]); }\n\n        if (!comparisonFunctions[keys[i]](objValue, queryValue[keys[i]])) { return false; }\n      }\n      return true;\n    }\n  }\n\n  // Using regular expressions with basic querying\n  if (util.isRegExp(queryValue)) { return comparisonFunctions.$regex(objValue, queryValue); }\n\n  // queryValue is either a native value or a normal object\n  // Basic matching is possible\n  if (!areThingsEqual(objValue, queryValue)) { return false; }\n\n  return true;\n}\n\n\n// Interface\nmodule.exports.serialize = serialize;\nmodule.exports.deserialize = deserialize;\nmodule.exports.deepCopy = deepCopy;\nmodule.exports.checkObject = checkObject;\nmodule.exports.isPrimitiveType = isPrimitiveType;\nmodule.exports.modify = modify;\nmodule.exports.getDotValue = getDotValue;\nmodule.exports.match = match;\nmodule.exports.areThingsEqual = areThingsEqual;\nmodule.exports.compareThings = compareThings;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uncommittedEvents = Symbol.for('uncommittedEvents');\nconst loadEvents = Symbol.for('loadEvents');\nconst uuid = require('uuid').v1;\nconst setdata = Symbol.for(\"setdata\");\nconst datakey = Symbol(\"datakey\");\nconst isLock = Symbol.for(\"isLock\");\nclass Actor {\n    constructor(data = {}) {\n        this.lockData = { key: null, timeout: 2000, latestLockTime: new Date(), isLock: false };\n        this[uncommittedEvents] = [];\n        this[datakey] = data;\n        this[datakey].isAlive = true;\n        this[datakey].listeners = {};\n        if (!this[datakey].id) {\n            this[datakey].id = uuid();\n        }\n    }\n    get type() {\n        return this.constructor.getType();\n    }\n    set [setdata](data) {\n        this[datakey] = data;\n    }\n    get id() {\n        return this.json.id;\n    }\n    static getType() {\n        return this.name;\n    }\n    get json() {\n        return this.constructor.toJSON(this);\n    }\n    get updater() {\n        throw new Error(\"please implements updater() Getter!\");\n    }\n    subscribe(event, listenerType, listenerId, handleMethodName) {\n        this.$({ event, listenerType, listenerId, handleMethodName });\n    }\n    unsubscribe(event, listenerId) {\n        this.$({ event, listenerId });\n    }\n    [isLock](key) {\n        if (this.lockData.key) {\n            if (this.lockData.key === key) {\n                return false;\n            }\n            else {\n                return this.lockData.isLock && Date.now() - this.lockData.latestLockTime.getTime() < this.lockData.timeout;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    remove() {\n        this.$();\n    }\n    lock(data) {\n        if (this.lockData.key === data.key) {\n            return true;\n        }\n        if (this.lockData.isLock && Date.now() - this.lockData.latestLockTime.getTime() < this.lockData.timeout) {\n            return false;\n        }\n        else {\n            this.lockData.timeout = data.timeout || 200;\n            this.lockData.key = data.key;\n            this.lockData.isLock = true;\n            this.lockData.latestLockTime = new Date();\n            return true;\n        }\n    }\n    // todo\n    unlock(key) {\n        if (this.lockData.key === key) {\n            this.lockData.key = null;\n        }\n    }\n    static toJSON(actor) {\n        return JSON.parse(JSON.stringify(actor[datakey]));\n    }\n    static parse(json) {\n        return new this(json);\n    }\n}\nexports.default = Actor;\n//# sourceMappingURL=Actor.js.map","/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                }\n            }));\n        });\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback(null);\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (err, v) {\n                results[x.index] = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, results);\n        });\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        if (!keys.length) {\n            return callback(null);\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (_keys(results).length === keys.length) {\n                callback(null, results);\n                callback = function () {};\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = (tasks[k] instanceof Function) ? [tasks[k]]: tasks[k];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor !== Array) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (tasks.constructor === Array) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (test()) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            if (!test()) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if(data.constructor !== Array) {\n              data = [data];\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            }\n        };\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            push: function (data, callback) {\n                if(data.constructor !== Array) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain) cargo.drain();\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                callback.apply(null, memo[key]);\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.compose = function (/* functions... */) {\n        var fns = Array.prototype.reverse.call(arguments);\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // AMD / RequireJS\n    if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // Node.js\n    else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uuid = require(\"uuid\").v1;\nclass Snap {\n    constructor(actor, index = 0, latestEventIndex = 0) {\n        this.index = index;\n        this.latestEventIndex = latestEventIndex;\n        this.id = uuid();\n        this.date = new Date();\n        this.actorId = actor.id;\n        this.actorType = actor.type;\n        this.data = actor.json;\n    }\n    get json() {\n        let { id, latestEventIndex, date, actorId, actorType, data, index } = this;\n        return { id, latestEventIndex, date, actorId, actorType, data, index };\n    }\n    static parse(data) {\n        let snap = JSON.parse(JSON.stringify(data));\n        snap.__proto__ = Snap.prototype;\n        return snap;\n    }\n}\nexports.default = Snap;\n//# sourceMappingURL=Snap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Domain_1 = require(\"./Domain\");\nexports.Domain = Domain_1.default;\nvar Actor_1 = require(\"./Actor\");\nexports.Actor = Actor_1.default;\nvar Event_1 = require(\"./Event\");\nexports.Event = Event_1.default;\nconst Domain_2 = require(\"./Domain\");\n// default domain instance.\nexports.domain = new Domain_2.default();\n//# sourceMappingURL=index.js.map","/**\n * Return an array with the numbers from 0 to n-1, in a random order\n */\nfunction getRandomArray (n) {\n  var res, next;\n\n  if (n === 0) { return []; }\n  if (n === 1) { return [0]; }\n\n  res = getRandomArray(n - 1);\n  next = Math.floor(Math.random() * n);\n  res.splice(next, 0, n - 1);   // Add n-1 at a random position in the array\n\n  return res;\n};\nmodule.exports.getRandomArray = getRandomArray;\n\n\n/*\n * Default compareKeys function will work for numbers, strings and dates\n */\nfunction defaultCompareKeysFunction (a, b) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  if (a === b) { return 0; }\n\n  var err = new Error(\"Couldn't compare elements\");\n  err.a = a;\n  err.b = b;\n  throw err;\n}\nmodule.exports.defaultCompareKeysFunction = defaultCompareKeysFunction;\n\n\n/**\n * Check whether two values are equal (used in non-unique deletion)\n */\nfunction defaultCheckValueEquality (a, b) {\n  return a === b;\n}\nmodule.exports.defaultCheckValueEquality = defaultCheckValueEquality;\n","/**\n * Simple binary search tree\n */\nvar customUtils = require('./customUtils');\n\n\n/**\n * Constructor\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction BinarySearchTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n// ================================\n// Methods used to test the tree\n// ================================\n\n\n/**\n * Get the descendant with max key\n */\nBinarySearchTree.prototype.getMaxKeyDescendant = function () {\n  if (this.right) {\n    return this.right.getMaxKeyDescendant();\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the maximum key\n */\nBinarySearchTree.prototype.getMaxKey = function () {\n  return this.getMaxKeyDescendant().key;\n};\n\n\n/**\n * Get the descendant with min key\n */\nBinarySearchTree.prototype.getMinKeyDescendant = function () {\n  if (this.left) {\n    return this.left.getMinKeyDescendant()\n  } else {\n    return this;\n  }\n};\n\n\n/**\n * Get the minimum key\n */\nBinarySearchTree.prototype.getMinKey = function () {\n  return this.getMinKeyDescendant().key;\n};\n\n\n/**\n * Check that all nodes (incl. leaves) fullfil condition given by fn\n * test is a function passed every (key, data) and which throws if the condition is not met\n */\nBinarySearchTree.prototype.checkAllNodesFullfillCondition = function (test) {\n  if (!this.hasOwnProperty('key')) { return; }\n\n  test(this.key, this.data);\n  if (this.left) { this.left.checkAllNodesFullfillCondition(test); }\n  if (this.right) { this.right.checkAllNodesFullfillCondition(test); }\n};\n\n\n/**\n * Check that the core BST properties on node ordering are verified\n * Throw if they aren't\n */\nBinarySearchTree.prototype.checkNodeOrdering = function () {\n  var self = this;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.left) {\n    this.left.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) >= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.left.checkNodeOrdering();\n  }\n\n  if (this.right) {\n    this.right.checkAllNodesFullfillCondition(function (k) {\n      if (self.compareKeys(k, self.key) <= 0) {\n        throw new Error('Tree with root ' + self.key + ' is not a binary search tree');\n      }\n    });\n    this.right.checkNodeOrdering();\n  }\n};\n\n\n/**\n * Check that all pointers are coherent in this tree\n */\nBinarySearchTree.prototype.checkInternalPointers = function () {\n  if (this.left) {\n    if (this.left.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.left.checkInternalPointers();\n  }\n\n  if (this.right) {\n    if (this.right.parent !== this) { throw new Error('Parent pointer broken for key ' + this.key); }\n    this.right.checkInternalPointers();\n  }\n};\n\n\n/**\n * Check that a tree is a BST as defined here (node ordering and pointer references)\n */\nBinarySearchTree.prototype.checkIsBST = function () {\n  this.checkNodeOrdering();\n  this.checkInternalPointers();\n  if (this.parent) { throw new Error(\"The root shouldn't have a parent\"); }\n};\n\n\n/**\n * Get number of keys inserted\n */\nBinarySearchTree.prototype.getNumberOfKeys = function () {\n  var res;\n\n  if (!this.hasOwnProperty('key')) { return 0; }\n\n  res = 1;\n  if (this.left) { res += this.left.getNumberOfKeys(); }\n  if (this.right) { res += this.right.getNumberOfKeys(); }\n\n  return res;\n};\n\n\n\n// ============================================\n// Methods used to actually work on the tree\n// ============================================\n\n/**\n * Create a BST similar (i.e. same options except for key and value) to the current one\n * Use the same constructor (i.e. BinarySearchTree, AVLTree etc)\n * @param {Object} options see constructor\n */\nBinarySearchTree.prototype.createSimilar = function (options) {\n  options = options || {};\n  options.unique = this.unique;\n  options.compareKeys = this.compareKeys;\n  options.checkValueEquality = this.checkValueEquality;\n\n  return new this.constructor(options);\n};\n\n\n/**\n * Create the left child of this BST and return it\n */\nBinarySearchTree.prototype.createLeftChild = function (options) {\n  var leftChild = this.createSimilar(options);\n  leftChild.parent = this;\n  this.left = leftChild;\n\n  return leftChild;\n};\n\n\n/**\n * Create the right child of this BST and return it\n */\nBinarySearchTree.prototype.createRightChild = function (options) {\n  var rightChild = this.createSimilar(options);\n  rightChild.parent = this;\n  this.right = rightChild;\n\n  return rightChild;\n};\n\n\n/**\n * Insert a new element\n */\nBinarySearchTree.prototype.insert = function (key, value) {\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    return;\n  }\n\n  // Same key as root\n  if (this.compareKeys(this.key, key) === 0) {\n    if (this.unique) {\n      var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n      err.key = key;\n      err.errorType = 'uniqueViolated';\n      throw err;\n    } else {\n      this.data.push(value);\n    }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    // Insert in left subtree\n    if (this.left) {\n      this.left.insert(key, value);\n    } else {\n      this.createLeftChild({ key: key, value: value });\n    }\n  } else {\n    // Insert in right subtree\n    if (this.right) {\n      this.right.insert(key, value);\n    } else {\n      this.createRightChild({ key: key, value: value });\n    }\n  }\n};\n\n\n/**\n * Search for all data corresponding to a key\n */\nBinarySearchTree.prototype.search = function (key) {\n  if (!this.hasOwnProperty('key')) { return []; }\n\n  if (this.compareKeys(this.key, key) === 0) { return this.data; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) {\n      return this.left.search(key);\n    } else {\n      return [];\n    }\n  } else {\n    if (this.right) {\n      return this.right.search(key);\n    } else {\n      return [];\n    }\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches a lower bound\n */\nBinarySearchTree.prototype.getLowerBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$gt') && !query.hasOwnProperty('$gte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$gt') && query.hasOwnProperty('$gte')) {\n    if (self.compareKeys(query.$gte, query.$gt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n\n    if (self.compareKeys(query.$gte, query.$gt) > 0) {\n      return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$gt')) {\n    return function (key) { return self.compareKeys(key, query.$gt) > 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$gte) >= 0; };\n  }\n};\n\n\n/**\n * Return a function that tells whether a given key matches an upper bound\n */\nBinarySearchTree.prototype.getUpperBoundMatcher = function (query) {\n  var self = this;\n\n  // No lower bound\n  if (!query.hasOwnProperty('$lt') && !query.hasOwnProperty('$lte')) {\n    return function () { return true; };\n  }\n\n  if (query.hasOwnProperty('$lt') && query.hasOwnProperty('$lte')) {\n    if (self.compareKeys(query.$lte, query.$lt) === 0) {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n\n    if (self.compareKeys(query.$lte, query.$lt) < 0) {\n      return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n    } else {\n      return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n    }\n  }\n\n  if (query.hasOwnProperty('$lt')) {\n    return function (key) { return self.compareKeys(key, query.$lt) < 0; };\n  } else {\n    return function (key) { return self.compareKeys(key, query.$lte) <= 0; };\n  }\n};\n\n\n// Append all elements in toAppend to array\nfunction append (array, toAppend) {\n  var i;\n\n  for (i = 0; i < toAppend.length; i += 1) {\n    array.push(toAppend[i]);\n  }\n}\n\n\n/**\n * Get all data for a key between bounds\n * Return it in key order\n * @param {Object} query Mongo-style query where keys are $lt, $lte, $gt or $gte (other keys are not considered)\n * @param {Functions} lbm/ubm matching functions calculated at the first recursive step\n */\nBinarySearchTree.prototype.betweenBounds = function (query, lbm, ubm) {\n  var res = [];\n\n  if (!this.hasOwnProperty('key')) { return []; }   // Empty tree\n\n  lbm = lbm || this.getLowerBoundMatcher(query);\n  ubm = ubm || this.getUpperBoundMatcher(query);\n\n  if (lbm(this.key) && this.left) { append(res, this.left.betweenBounds(query, lbm, ubm)); }\n  if (lbm(this.key) && ubm(this.key)) { append(res, this.data); }\n  if (ubm(this.key) && this.right) { append(res, this.right.betweenBounds(query, lbm, ubm)); }\n\n  return res;\n};\n\n\n/**\n * Delete the current node if it is a leaf\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfLeaf = function () {\n  if (this.left || this.right) { return false; }\n\n  // The leaf is itself a root\n  if (!this.parent) {\n    delete this.key;\n    this.data = [];\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = null;\n  } else {\n    this.parent.right = null;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete the current node if it has only one child\n * Return true if it was deleted\n */\nBinarySearchTree.prototype.deleteIfOnlyOneChild = function () {\n  var child;\n\n  if (this.left && !this.right) { child = this.left; }\n  if (!this.left && this.right) { child = this.right; }\n  if (!child) { return false; }\n\n  // Root\n  if (!this.parent) {\n    this.key = child.key;\n    this.data = child.data;\n\n    this.left = null;\n    if (child.left) {\n      this.left = child.left;\n      child.left.parent = this;\n    }\n\n    this.right = null;\n    if (child.right) {\n      this.right = child.right;\n      child.right.parent = this;\n    }\n\n    return true;\n  }\n\n  if (this.parent.left === this) {\n    this.parent.left = child;\n    child.parent = this.parent;\n  } else {\n    this.parent.right = child;\n    child.parent = this.parent;\n  }\n\n  return true;\n};\n\n\n/**\n * Delete a key or just a value\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\nBinarySearchTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    ;\n\n  if (!this.hasOwnProperty('key')) { return; }\n\n  if (this.compareKeys(key, this.key) < 0) {\n    if (this.left) { this.left.delete(key, value); }\n    return;\n  }\n\n  if (this.compareKeys(key, this.key) > 0) {\n    if (this.right) { this.right.delete(key, value); }\n    return;\n  }\n\n  if (!this.compareKeys(key, this.key) === 0) { return; }\n\n  // Delete only a value\n  if (this.data.length > 1 && value !== undefined) {\n    this.data.forEach(function (d) {\n      if (!self.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    self.data = newData;\n    return;\n  }\n\n  // Delete the whole node\n  if (this.deleteIfLeaf()) {\n    return;\n  }\n  if (this.deleteIfOnlyOneChild()) {\n    return;\n  }\n\n  // We are in the case where the node to delete has two children\n  if (Math.random() >= 0.5) {   // Randomize replacement to avoid unbalancing the tree too much\n    // Use the in-order predecessor\n    replaceWith = this.left.getMaxKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.left = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.right = replaceWith.left;\n      if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n    }\n  } else {\n    // Use the in-order successor\n    replaceWith = this.right.getMinKeyDescendant();\n\n    this.key = replaceWith.key;\n    this.data = replaceWith.data;\n\n    if (this === replaceWith.parent) {   // Special case\n      this.right = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    } else {\n      replaceWith.parent.left = replaceWith.right;\n      if (replaceWith.right) { replaceWith.right.parent = replaceWith.parent; }\n    }\n  }\n};\n\n\n/**\n * Execute a function on every node of the tree, in key order\n * @param {Function} fn Signature: node. Most useful will probably be node.key and node.data\n */\nBinarySearchTree.prototype.executeOnEveryNode = function (fn) {\n  if (this.left) { this.left.executeOnEveryNode(fn); }\n  fn(this);\n  if (this.right) { this.right.executeOnEveryNode(fn); }\n};\n\n\n/**\n * Pretty print a tree\n * @param {Boolean} printData To print the nodes' data along with the key\n */\nBinarySearchTree.prototype.prettyPrint = function (printData, spacing) {\n  spacing = spacing || \"\";\n\n  console.log(spacing + \"* \" + this.key);\n  if (printData) { console.log(spacing + \"* \" + this.data); }\n\n  if (!this.left && !this.right) { return; }\n\n  if (this.left) {\n    this.left.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n  if (this.right) {\n    this.right.prettyPrint(printData, spacing + \"  \");\n  } else {\n    console.log(spacing + \"  *\");\n  }\n};\n\n\n\n\n// Interface\nmodule.exports = BinarySearchTree;\n","var BinarySearchTree = require('binary-search-tree').AVLTree\n  , model = require('./model')\n  , _ = require('underscore')\n  , util = require('util')\n  ;\n\n/**\n * Two indexed pointers are equal iif they point to the same place\n */\nfunction checkValueEquality (a, b) {\n  return a === b;\n}\n\n/**\n * Type-aware projection\n */\nfunction projectForUnique (elt) {\n  if (elt === null) { return '$null'; }\n  if (typeof elt === 'string') { return '$string' + elt; }\n  if (typeof elt === 'boolean') { return '$boolean' + elt; }\n  if (typeof elt === 'number') { return '$number' + elt; }\n  if (util.isArray(elt)) { return '$date' + elt.getTime(); }\n\n  return elt;   // Arrays and objects, will check for pointer equality\n}\n\n\n/**\n * Create a new index\n * All methods on an index guarantee that either the whole operation was successful and the index changed\n * or the operation was unsuccessful and an error is thrown while the index is unchanged\n * @param {String} options.fieldName On which field should the index apply (can use dot notation to index on sub fields)\n * @param {Boolean} options.unique Optional, enforce a unique constraint (default: false)\n * @param {Boolean} options.sparse Optional, allow a sparse index (we can have documents for which fieldName is undefined) (default: false)\n */\nfunction Index (options) {\n  this.fieldName = options.fieldName;\n  this.unique = options.unique || false;\n  this.sparse = options.sparse || false;\n\n  this.treeOptions = { unique: this.unique, compareKeys: model.compareThings, checkValueEquality: checkValueEquality };\n\n  this.reset();   // No data in the beginning\n}\n\n\n/**\n * Reset an index\n * @param {Document or Array of documents} newData Optional, data to initialize the index with\n *                                                 If an error is thrown during insertion, the index is not modified\n */\nIndex.prototype.reset = function (newData) {\n  this.tree = new BinarySearchTree(this.treeOptions);\n\n  if (newData) { this.insert(newData); }\n};\n\n\n/**\n * Insert a new document in the index\n * If an array is passed, we insert all its elements (if one insertion fails the index is not modified)\n * O(log(n))\n */\nIndex.prototype.insert = function (doc) {\n  var key, self = this\n    , keys, i, failingI, error\n    ;\n\n  if (util.isArray(doc)) { this.insertMultipleDocs(doc); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  // We don't index documents that don't contain the field if the index is sparse\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.insert(key, doc);\n  } else {\n    // If an insert fails due to a unique constraint, roll back all inserts before it\n    keys = _.uniq(key, projectForUnique);\n\n    for (i = 0; i < keys.length; i += 1) {\n      try {\n        this.tree.insert(keys[i], doc);\n      } catch (e) {\n        error = e;\n        failingI = i;\n        break;\n      }\n    }\n\n    if (error) {\n      for (i = 0; i < failingI; i += 1) {\n        this.tree.delete(keys[i], doc);\n      }\n\n      throw error;\n    }\n  }\n};\n\n\n/**\n * Insert an array of documents in the index\n * If a constraint is violated, the changes should be rolled back and an error thrown\n *\n * @API private\n */\nIndex.prototype.insertMultipleDocs = function (docs) {\n  var i, error, failingI;\n\n  for (i = 0; i < docs.length; i += 1) {\n    try {\n      this.insert(docs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(docs[i]);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove a document from the index\n * If an array is passed, we remove all its elements\n * The remove operation is safe with regards to the 'unique' constraint\n * O(log(n))\n */\nIndex.prototype.remove = function (doc) {\n  var key, self = this;\n\n  if (util.isArray(doc)) { doc.forEach(function (d) { self.remove(d); }); return; }\n\n  key = model.getDotValue(doc, this.fieldName);\n\n  if (key === undefined && this.sparse) { return; }\n\n  if (!util.isArray(key)) {\n    this.tree.delete(key, doc);\n  } else {\n    _.uniq(key, projectForUnique).forEach(function (_key) {\n      self.tree.delete(_key, doc);\n    });\n  }\n};\n\n\n/**\n * Update a document in the index\n * If a constraint is violated, changes are rolled back and an error thrown\n * Naive implementation, still in O(log(n))\n */\nIndex.prototype.update = function (oldDoc, newDoc) {\n  if (util.isArray(oldDoc)) { this.updateMultipleDocs(oldDoc); return; }\n\n  this.remove(oldDoc);\n\n  try {\n    this.insert(newDoc);\n  } catch (e) {\n    this.insert(oldDoc);\n    throw e;\n  }\n};\n\n\n/**\n * Update multiple documents in the index\n * If a constraint is violated, the changes need to be rolled back\n * and an error thrown\n * @param {Array of oldDoc, newDoc pairs} pairs\n *\n * @API private\n */\nIndex.prototype.updateMultipleDocs = function (pairs) {\n  var i, failingI, error;\n\n  for (i = 0; i < pairs.length; i += 1) {\n    this.remove(pairs[i].oldDoc);\n  }\n\n  for (i = 0; i < pairs.length; i += 1) {\n    try {\n      this.insert(pairs[i].newDoc);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  // If an error was raised, roll back changes in the inverse order\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.remove(pairs[i].newDoc);\n    }\n\n    for (i = 0; i < pairs.length; i += 1) {\n      this.insert(pairs[i].oldDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Revert an update\n */\nIndex.prototype.revertUpdate = function (oldDoc, newDoc) {\n  var revert = [];\n\n  if (!util.isArray(oldDoc)) {\n    this.update(newDoc, oldDoc);\n  } else {\n    oldDoc.forEach(function (pair) {\n      revert.push({ oldDoc: pair.newDoc, newDoc: pair.oldDoc });\n    });\n    this.update(revert);\n  }\n};\n\n\n/**\n * Get all documents in index whose key match value (if it is a Thing) or one of the elements of value (if it is an array of Things)\n * @param {Thing} value Value to match the key against\n * @return {Array of documents}\n */\nIndex.prototype.getMatching = function (value) {\n  var self = this;\n\n  if (!util.isArray(value)) {\n    return self.tree.search(value);\n  } else {\n    var _res = {}, res = [];\n\n    value.forEach(function (v) {\n      self.getMatching(v).forEach(function (doc) {\n        _res[doc._id] = doc;\n      });\n    });\n\n    Object.keys(_res).forEach(function (_id) {\n      res.push(_res[_id]);\n    });\n\n    return res;\n  }\n};\n\n\n/**\n * Get all documents in index whose key is between bounds are they are defined by query\n * Documents are sorted by key\n * @param {Query} query\n * @return {Array of documents}\n */\nIndex.prototype.getBetweenBounds = function (query) {\n  return this.tree.betweenBounds(query);\n};\n\n\n/**\n * Get all elements in the index\n * @return {Array of documents}\n */\nIndex.prototype.getAll = function () {\n  var res = [];\n\n  this.tree.executeOnEveryNode(function (node) {\n    var i;\n\n    for (i = 0; i < node.data.length; i += 1) {\n      res.push(node.data[i]);\n    }\n  });\n\n  return res;\n};\n\n\n\n\n// Interface\nmodule.exports = Index;\n","/**\n * Specific customUtils for the browser, where we don't have access to the Crypto and Buffer modules\n */\n\n/**\n * Taken from the crypto-browserify module\n * https://github.com/dominictarr/crypto-browserify\n * NOTE: Math.random() does not guarantee \"cryptographic quality\" but we actually don't need it\n */\nfunction randomBytes (size) {\n  var bytes = new Array(size);\n  var r;\n\n  for (var i = 0, r; i < size; i++) {\n    if ((i & 0x03) == 0) r = Math.random() * 0x100000000;\n    bytes[i] = r >>> ((i & 0x03) << 3) & 0xff;\n  }\n\n  return bytes;\n}\n\n\n/**\n * Taken from the base64-js module\n * https://github.com/beatgammit/base64-js/\n */\nfunction byteArrayToBase64 (uint8) {\n  var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    , extraBytes = uint8.length % 3   // if we have 1 byte left, pad 2 bytes\n    , output = \"\"\n    , temp, length, i;\n\n  function tripletToBase64 (num) {\n    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n  };\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n    temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output += tripletToBase64(temp);\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  switch (extraBytes) {\n    case 1:\n      temp = uint8[uint8.length - 1];\n      output += lookup[temp >> 2];\n      output += lookup[(temp << 4) & 0x3F];\n      output += '==';\n      break;\n    case 2:\n      temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\n      output += lookup[temp >> 10];\n      output += lookup[(temp >> 4) & 0x3F];\n      output += lookup[(temp << 2) & 0x3F];\n      output += '=';\n      break;\n  }\n\n  return output;\n}\n\n\n/**\n * Return a random alphanumerical string of length len\n * There is a very small probability (less than 1/1,000,000) for the length to be less than len\n * (il the base64 conversion yields too many pluses and slashes) but\n * that's not an issue here\n * The probability of a collision is extremely small (need 3*10^12 documents to have one chance in a million of a collision)\n * See http://en.wikipedia.org/wiki/Birthday_problem\n */\nfunction uid (len) {\n  return byteArrayToBase64(randomBytes(Math.ceil(Math.max(8, len * 2)))).replace(/[+\\/]/g, '').slice(0, len);\n}\n\n\n\nmodule.exports.uid = uid;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = require(\"./Event\");\nfunction getAlias(event) {\n    if (event instanceof Event_1.default) {\n        return [\n            `${event.actorType}.${event.actorId}.${event.type}.${event.method}.${event.sagaId}`,\n            `${event.actorType}.${event.actorId}.${event.type}.${event.method}.`,\n            `${event.actorType}.${event.actorId}.${event.type}..`,\n            `${event.actorType}.${event.actorId}...`,\n            `${event.actorType}..${event.type}..`,\n            `..${event.type}..`,\n            `${event.actorType}....`,\n            \"....\"\n        ];\n    }\n    else {\n        return `${event.actorType || \"\"}.${event.actorId || \"\"}.${event.type || \"\"}.${event.method || \"\"}.${event.sagaId || \"\"}`;\n    }\n}\nexports.getAlias = getAlias;\n//# sourceMappingURL=eventAlias.js.map","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Service_1 = require(\"./Service\");\nconst eventAlias_1 = require(\"./eventAlias\");\nconst Event_1 = require(\"./Event\");\nconst Repository_1 = require(\"./Repository\");\nconst DefaultEventStore_1 = require(\"./DefaultEventStore\");\nconst EventBus_1 = require(\"./EventBus\");\nconst isLock = Symbol.for(\"isLock\");\nconst debug = require('debug')('domain');\nconst uid = require(\"uuid\").v1;\nconst getActorProxy = Symbol.for(\"getActorProxy\");\nconst Role_1 = require(\"./Role\");\nconst ActorEventEmitter_1 = require(\"./ActorEventEmitter\");\nconst IDManager_1 = require(\"./cluster/IDManager\");\nclass Domain {\n    constructor(options = {}) {\n        this.roleMap = new Map();\n        this.id = uid();\n        this.ActorClassMap = new Map();\n        this.eventstore = options.eventstore || (options.EventStore ? new options.EventStore : new DefaultEventStore_1.default());\n        this.repositorieMap = new Map();\n        this.eventbus = options.EventBus ?\n            new options.EventBus(this.eventstore, this, this.repositorieMap, this.ActorClassMap) :\n            new EventBus_1.default(this.eventstore, this, this.repositorieMap, this.ActorClassMap);\n        this.register(ActorEventEmitter_1.default).register(IDManager_1.default);\n    }\n    // todo\n    use(plugin) {\n        plugin(this);\n        return this;\n    }\n    async getNativeActor(type, id) {\n        const roles = type.split(\".\");\n        const actorType = roles.shift();\n        let repo = this.repositorieMap.get(this.ActorClassMap.get(actorType));\n        const actor = await repo.get(id);\n        let result;\n        if (roles.length) {\n            for (let role of roles) {\n                result = this.roleMap.get(role).wrap(result || actor);\n            }\n        }\n        return result || actor;\n    }\n    async nativeCreateActor(type, data) {\n        const actorType = type.split(\".\").shift();\n        const ActorClass = this.ActorClassMap.get(actorType);\n        const repo = this.repositorieMap.get(ActorClass);\n        if (ActorClass.createBefor) {\n            try {\n                data = (await ActorClass.createBefor(data, this)) || data;\n            }\n            catch (err) {\n                throw err;\n            }\n        }\n        const actorId = (await repo.create(data)).json.id;\n        const actor = await this[getActorProxy](type, actorId);\n        return actor;\n    }\n    async [getActorProxy](type, id, sagaId, key) {\n        const that = this;\n        let actor = await this.getNativeActor(type, id);\n        if (!actor) {\n            return null;\n        }\n        let roles;\n        if (Array.isArray(actor)) {\n            roles = actor[1];\n            actor = actor[0];\n        }\n        const proxy = new Proxy(actor, {\n            get(target, prop) {\n                if (prop === \"then\") {\n                    return proxy;\n                }\n                ;\n                if (\"lock\" === prop || \"lockData\" === prop) {\n                    return Reflect.get(target, prop);\n                }\n                let member = actor[prop];\n                let roleName;\n                let role;\n                if (prop === \"json\" || prop === \"id\") {\n                    return member;\n                }\n                else {\n                    if (!member) {\n                        if (roles) {\n                            for (let rn in roles) {\n                                role = roles[rn];\n                                member = role.methods[prop];\n                                roleName = rn;\n                                if (member)\n                                    break;\n                            }\n                        }\n                        else\n                            return;\n                    }\n                    if (typeof member === \"function\") {\n                        if (prop in Object.prototype)\n                            return undefined;\n                        return new Proxy(member, {\n                            apply(target, cxt, args) {\n                                return new Promise(function (resolve, reject) {\n                                    function run() {\n                                        const islock = actor[isLock](key);\n                                        if (islock) {\n                                            setTimeout(run, 2000);\n                                        }\n                                        else {\n                                            const iservice = new Service_1.default(actor, that.eventbus, that.repositorieMap.get(that.ActorClassMap.get(actor.type)), (type, id, sagaId, key) => that[getActorProxy](type, id, sagaId, key), (type, data) => that.nativeCreateActor(type, data), prop, sagaId, roleName, role);\n                                            const service = new Proxy(function service(type, data) {\n                                                if (arguments.length === 0) {\n                                                    type = prop;\n                                                    data = null;\n                                                }\n                                                else if (arguments.length === 1) {\n                                                    data = type;\n                                                    type = prop;\n                                                }\n                                                return iservice.apply(type, data);\n                                            }, {\n                                                get(target, prop) {\n                                                    return iservice[prop].bind(iservice);\n                                                }\n                                            });\n                                            cxt = { service, $: service };\n                                            cxt.__proto__ = proxy;\n                                            let result;\n                                            try {\n                                                result = target.call(cxt, ...args);\n                                            }\n                                            catch (err) {\n                                                that.eventbus.rollback(sagaId || iservice.sagaId).then(r => reject(err));\n                                                return;\n                                            }\n                                            if (result instanceof Promise) {\n                                                result.then(result => {\n                                                    resolve(result);\n                                                }).catch(err => {\n                                                    that.eventbus.rollback(sagaId || iservice.sagaId).then(r => reject(err));\n                                                });\n                                            }\n                                            else {\n                                                resolve(result);\n                                            }\n                                        }\n                                    }\n                                    run();\n                                });\n                            }\n                        });\n                    }\n                    else\n                        return undefined;\n                }\n            }\n        });\n        return proxy;\n    }\n    register(Classes) {\n        if (!Array.isArray(Classes)) {\n            Classes = [Classes];\n        }\n        for (let Class of Classes) {\n            const type = Class.getType();\n            console.log(Class,Class.getType())\n            if (!type)\n                throw new Error(\"please implements Actor.getType!\");\n            this.ActorClassMap.set(type, Class);\n            const repo = new Repository_1.default(Class, this.eventstore, this.roleMap);\n            repo.on(\"create\", json => {\n                let event = new Event_1.default({ id: json.id, type: Class.getType() }, json, \"create\", \"create\");\n                const alias = eventAlias_1.getAlias(event);\n                for (let name of alias) {\n                    this.eventbus.emitter.emit(name, event);\n                }\n            });\n            this.repositorieMap.set(Class, repo);\n        }\n        return this;\n    }\n    async create(type, data) {\n        return await this.nativeCreateActor(type, data);\n    }\n    async get(type, id) {\n        return await this[getActorProxy](type, id);\n    }\n    on(event, handle) {\n        this.eventbus.on(event, handle);\n    }\n    once(event, handle) {\n        this.eventbus.on(event, handle);\n    }\n    getCacheActorIds() {\n        let result = [];\n        for (let [key, Actor] of this.ActorClassMap) {\n            result = result.concat(this.repositorieMap.get(Actor).getCacheActorIds());\n        }\n        return result;\n    }\n    addRole(name, supportedActorNames, methods, updater) {\n        if (typeof name !== \"string\") {\n            supportedActorNames = name.types;\n            methods = name.methods;\n            updater = name.updater;\n            name = name.name;\n        }\n        if (this.roleMap.has(name))\n            throw new Error(name + \" role is exist. \");\n        this.roleMap.set(name, new Role_1.default(name, supportedActorNames, methods, updater));\n        return this;\n    }\n}\nexports.default = Domain;\n//# sourceMappingURL=Domain.js.map\n","import {domain,Actor} from '../..';\n\nclass User extends Actor {\n\n   static getType(){\n     return 'User';\n   }\n\n   constructor(data){\n     super(data);\n   }\n\n   changename(name){\n     this.$(name);\n   }\n\n   updater(){\n     return {\n       changename(json,event){\n         return {name:event.data}\n       }\n     }\n   }\n\n}\n\nexport default domain.register(User);\n","import domain from './domain';\n\nlet run = async ()=> {\n  const json = await domain.create(\"User\",{name:\"leo\"});\n\n  document.body.innerHTML = `\n    <h4>${json}</h4>\n  `\n}\n\nrun();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Actor_1 = require(\"../Actor\");\nconst datakey = Symbol.for(\"datakey\");\nconst setdata = Symbol.for(\"setdata\");\nclass IdManager extends Actor_1.default {\n    constructor({ id }) {\n        super({ id, ids: new Map() });\n    }\n    static toJSON(actor) {\n        const data = actor[datakey];\n        return { id: data.id, ids: Array.from(data.ids) };\n    }\n    static parse(json) {\n        const actor = new this(json);\n        actor[setdata].ids = new Map(json.ids);\n        return actor;\n    }\n}\nexports.default = IdManager;\n//# sourceMappingURL=IDManager.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Actor_1 = require(\"./Actor\");\nclass ActorEventEmitter extends Actor_1.default {\n    constructor(data) {\n        super(data);\n    }\n    async publish(event) {\n        let json = this.json;\n        let map = json[event.actorType];\n        for (let listenerId in map) {\n            let listener = map[listenerId];\n            let { listenerType, handleMethodName } = listener;\n            listener = await this.service.get(listenerType, listenerId);\n            if (listener) {\n                await listener[handleMethodName](event);\n            }\n        }\n    }\n    subscribe(actorType, listenerType, listenerId, handleMethodName) {\n        this.service.apply(\"_subscribe\", { actorType, listenerType, listenerId, handleMethodName });\n    }\n    unsubscribe(actorType, listenerId) {\n        this.service.apply(\"_unsubscribe\", { actorType, listenerId });\n    }\n    get updater() {\n        return {\n            _subscribe(json, event) {\n                let data = event.data;\n                let listenerMap = json[data.actorType] || {};\n                listenerMap[data.listenerId] = data;\n                return { [data.actorType]: listenerMap };\n            },\n            _unsubscribe(json, event) {\n                let data = event.data;\n                let listenerMap = json[data.actorType] || {};\n                delete listenerMap[data.listenerId];\n                return { [data.actorType]: listenerMap };\n            }\n        };\n    }\n}\nexports.default = ActorEventEmitter;\n//# sourceMappingURL=ActorEventEmitter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Role {\n    constructor(name, supportedActorNames, methods, updater = {}) {\n        this.name = name;\n        this.supportedActorNames = supportedActorNames;\n        this.methods = methods;\n        this.updater = updater;\n    }\n    // [actor , {roleA, roleB} ]\n    wrap(actor) {\n        if (Array.isArray(actor)) {\n            const act = actor[0];\n            if (!this.supportedActorNames.includes(act.type))\n                throw new Error(this.name + \"role don't support \" + act.type + \" actor.\");\n            const roles = actor[1];\n            roles[this.name] = this;\n            return actor;\n        }\n        else {\n            return [actor, { [this.name]: this }];\n        }\n    }\n}\nexports.default = Role;\n//# sourceMappingURL=Role.js.map","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nconst eventAlias_1 = require(\"./eventAlias\");\nconst Snap_1 = require(\"./Snap\");\nconst uncommittedEvents = Symbol.for(\"uncommittedEvents\");\nclass EventBus {\n    constructor(eventstore, domain, repositorieMap, ActorClassMap) {\n        // for (let [ActorClass, repo] of repositorieMap) {\n        //     repo.on(\"create\", json => {\n        //         const alias = getAlias({ type: \"create\", actorType: ActorClass.getType(), actorId: json.id });\n        //         for (let name of alias) {\n        //             this.emitter.emit(name, json);\n        //         }\n        //     });\n        // }\n        this.eventstore = eventstore;\n        this.domain = domain;\n        this.repositorieMap = repositorieMap;\n        this.ActorClassMap = ActorClassMap;\n        this.emitter = new events_1.EventEmitter();\n        this.lockSet = new Set();\n        this.subscribeRepo = new Map();\n        this.eventstore.on(\"saved events\", events => {\n            for (let event of events) {\n                const alias = eventAlias_1.getAlias(event);\n                for (let name of alias) {\n                    process.nextTick(() => {\n                        this.emitter.emit(name, event);\n                        const s = this.subscribeRepo.get(name);\n                        if (s) {\n                            for (let handle of s) {\n                                this.domain.get(handle.actorType, handle.actorId).then(actor => {\n                                    actor[handle.method](event);\n                                });\n                            }\n                        }\n                        this.subscribeRepo.delete(name);\n                    });\n                }\n            }\n        });\n    }\n    once(event, cb) {\n        return new Promise((resolve, reject) => {\n            this.emitter.once(eventAlias_1.getAlias(event), function (event) {\n                resolve(event);\n                if (cb) {\n                    setImmediate(() => cb(event));\n                }\n            });\n        });\n    }\n    on(event, cb) {\n        this.emitter.on(eventAlias_1.getAlias(event), function (event) {\n            cb(event);\n        });\n    }\n    async publish(actor) {\n        if (this.lockSet.has(actor.id)) {\n            return;\n        }\n        else {\n            this.lockSet.add(actor.id);\n        }\n        const event = await this.eventstore.getLatestEvent(actor.id);\n        let startIndex = event ? event.index + 1 : 0;\n        let events = actor[uncommittedEvents].map(function (evt, index) {\n            evt.index = index + startIndex;\n            return evt;\n        });\n        await this.eventstore.saveEvents(events);\n        actor[uncommittedEvents] = [];\n        let snap = await this.eventstore.getLatestSnapshot(actor.id);\n        let lastEvent = events[events.length - 1];\n        if (lastEvent.index - snap.lastEventId > 10) {\n            let latestEventIndex = lastEvent.index;\n            let index = snap.index + 1;\n            let newSnap = new Snap_1.default(actor, index, latestEventIndex);\n            await this.eventstore.createSnap(newSnap);\n        }\n        this.lockSet.delete(actor.id);\n        if (actor[uncommittedEvents].length) {\n            await this.publish(actor);\n        }\n    }\n    async rollback(sagaId) {\n        await this.eventstore.killSaga(sagaId);\n        const events = await this.eventstore.findEventsBySagaId(sagaId);\n        await this.eventstore.removeEventsBySagaId(sagaId);\n        events.forEach(event => {\n            const Class = this.ActorClassMap.get(event.actorType);\n            const repo = this.repositorieMap.get(Class);\n            repo.clear(event.actorId);\n        });\n    }\n}\nexports.default = EventBus;\n//# sourceMappingURL=EventBus.js.map","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","\"use strict\"\n    // global key for user preferred registration\nvar REGISTRATION_KEY = '@@any-promise/REGISTRATION',\n    // Prior registration (preferred or detected)\n    registered = null\n\n/**\n * Registers the given implementation.  An implementation must\n * be registered prior to any call to `require(\"any-promise\")`,\n * typically on application load.\n *\n * If called with no arguments, will return registration in\n * following priority:\n *\n * For Node.js:\n *\n * 1. Previous registration\n * 2. global.Promise if node.js version >= 0.12\n * 3. Auto detected promise based on first sucessful require of\n *    known promise libraries. Note this is a last resort, as the\n *    loaded library is non-deterministic. node.js >= 0.12 will\n *    always use global.Promise over this priority list.\n * 4. Throws error.\n *\n * For Browser:\n *\n * 1. Previous registration\n * 2. window.Promise\n * 3. Throws error.\n *\n * Options:\n *\n * Promise: Desired Promise constructor\n * global: Boolean - Should the registration be cached in a global variable to\n * allow cross dependency/bundle registration?  (default true)\n */\nmodule.exports = function(root, loadImplementation){\n  return function register(implementation, opts){\n    implementation = implementation || null\n    opts = opts || {}\n    // global registration unless explicitly  {global: false} in options (default true)\n    var registerGlobal = opts.global !== false;\n\n    // load any previous global registration\n    if(registered === null && registerGlobal){\n      registered = root[REGISTRATION_KEY] || null\n    }\n\n    if(registered !== null\n        && implementation !== null\n        && registered.implementation !== implementation){\n      // Throw error if attempting to redefine implementation\n      throw new Error('any-promise already defined as \"'+registered.implementation+\n        '\".  You can only register an implementation before the first '+\n        ' call to require(\"any-promise\") and an implementation cannot be changed')\n    }\n\n    if(registered === null){\n      // use provided implementation\n      if(implementation !== null && typeof opts.Promise !== 'undefined'){\n        registered = {\n          Promise: opts.Promise,\n          implementation: implementation\n        }\n      } else {\n        // require implementation if implementation is specified but not provided\n        registered = loadImplementation(implementation)\n      }\n\n      if(registerGlobal){\n        // register preference globally in case multiple installations\n        root[REGISTRATION_KEY] = registered\n      }\n    }\n\n    return registered\n  }\n}\n","\"use strict\";\nmodule.exports = require('./loader')(window, loadImplementation)\n\n/**\n * Browser specific loadImplementation.  Always uses `window.Promise`\n *\n * To register a custom implementation, must register with `Promise` option.\n */\nfunction loadImplementation(){\n  if(typeof window.Promise === 'undefined'){\n    throw new Error(\"any-promise browser requires a polyfill or explicit registration\"+\n      \" e.g: require('any-promise/register/bluebird')\")\n  }\n  return {\n    Promise: window.Promise,\n    implementation: 'window.Promise'\n  }\n}\n","module.exports = require('./register')().Promise\n","\nvar Promise = require('any-promise')\nvar assert = require('assert')\n\nmodule.exports = thenify\n\n/**\n * Turn async functions into promises\n *\n * @param {Function} $$__fn__$$\n * @return {Function}\n * @api public\n */\n\nfunction thenify($$__fn__$$, options) {\n  assert(typeof $$__fn__$$ === 'function')\n  return eval(createWrapper($$__fn__$$.name, options))\n}\n\n/**\n * Turn async functions into promises and backward compatible with callback\n *\n * @param {Function} $$__fn__$$\n * @return {Function}\n * @api public\n */\n\nthenify.withCallback = function ($$__fn__$$, options) {\n  assert(typeof $$__fn__$$ === 'function')\n  options = options || {}\n  options.withCallback = true\n  if (options.multiArgs === undefined) options.multiArgs = true\n  return eval(createWrapper($$__fn__$$.name, options))\n}\n\nfunction createCallback(resolve, reject, multiArgs) {\n  return function(err, value) {\n    if (err) return reject(err)\n    var length = arguments.length\n\n    if (length <= 2 || !multiArgs) return resolve(value)\n\n    if (Array.isArray(multiArgs)) {\n      var values = {}\n      for (var i = 1; i < length; i++) values[multiArgs[i - 1]] = arguments[i]\n      return resolve(values)\n    }\n\n    var values = new Array(length - 1)\n    for (var i = 1; i < length; ++i) values[i - 1] = arguments[i]\n    resolve(values)\n  }\n}\n\nfunction createWrapper(name, options) {\n  name = (name || '').replace(/\\s|bound(?!$)/g, '')\n  options = options || {}\n  // default to true\n  var multiArgs = options.multiArgs !== undefined ? options.multiArgs : true\n  multiArgs = 'var multiArgs = ' + JSON.stringify(multiArgs) + '\\n'\n\n  var withCallback = options.withCallback ?\n    'var lastType = typeof arguments[len - 1]\\n'\n    + 'if (lastType === \"function\") return $$__fn__$$.apply(self, arguments)\\n'\n   : ''\n\n  return '(function ' + name + '() {\\n'\n    + 'var self = this\\n'\n    + 'var len = arguments.length\\n'\n    + multiArgs\n    + withCallback\n    + 'var args = new Array(len + 1)\\n'\n    + 'for (var i = 0; i < len; ++i) args[i] = arguments[i]\\n'\n    + 'var lastIndex = i\\n'\n    + 'return new Promise(function (resolve, reject) {\\n'\n      + 'args[lastIndex] = createCallback(resolve, reject, multiArgs)\\n'\n      + '$$__fn__$$.apply(self, args)\\n'\n    + '})\\n'\n  + '})'\n}\n","/**\n * Manage access to data, be it to find, update or remove it\n */\nvar model = require('./model')\n  , _ = require('underscore')\n  ;\n\n\n\n/**\n * Create a new cursor for this collection\n * @param {Datastore} db - The datastore this cursor is bound to\n * @param {Query} query - The query this cursor will operate on\n * @param {Function} execFn - Handler to be executed after cursor has found the results and before the callback passed to find/findOne/update/remove\n */\nfunction Cursor (db, query, execFn) {\n  this.db = db;\n  this.query = query || {};\n  if (execFn) { this.execFn = execFn; }\n}\n\n\n/**\n * Set a limit to the number of results\n */\nCursor.prototype.limit = function(limit) {\n  this._limit = limit;\n  return this;\n};\n\n\n/**\n * Skip a the number of results\n */\nCursor.prototype.skip = function(skip) {\n  this._skip = skip;\n  return this;\n};\n\n\n/**\n * Sort results of the query\n * @param {SortQuery} sortQuery - SortQuery is { field: order }, field can use the dot-notation, order is 1 for ascending and -1 for descending\n */\nCursor.prototype.sort = function(sortQuery) {\n  this._sort = sortQuery;\n  return this;\n};\n\n\n/**\n * Add the use of a projection\n * @param {Object} projection - MongoDB-style projection. {} means take all fields. Then it's { key1: 1, key2: 1 } to take only key1 and key2\n *                              { key1: 0, key2: 0 } to omit only key1 and key2. Except _id, you can't mix takes and omits\n */\nCursor.prototype.projection = function(projection) {\n  this._projection = projection;\n  return this;\n};\n\n\n/**\n * Apply the projection\n */\nCursor.prototype.project = function (candidates) {\n  var res = [], self = this\n    , keepId, action, keys\n    ;\n\n  if (this._projection === undefined || Object.keys(this._projection).length === 0) {\n    return candidates;\n  }\n\n  keepId = this._projection._id === 0 ? false : true;\n  this._projection = _.omit(this._projection, '_id');\n\n  // Check for consistency\n  keys = Object.keys(this._projection);\n  keys.forEach(function (k) {\n    if (action !== undefined && self._projection[k] !== action) { throw new Error(\"Can't both keep and omit fields except for _id\"); }\n    action = self._projection[k];\n  });\n\n  // Do the actual projection\n  candidates.forEach(function (candidate) {\n    var toPush;\n    if (action === 1) {   // pick-type projection\n      toPush = { $set: {} };\n      keys.forEach(function (k) {\n        toPush.$set[k] = model.getDotValue(candidate, k);\n        if (toPush.$set[k] === undefined) { delete toPush.$set[k]; }\n      });\n      toPush = model.modify({}, toPush);\n    } else {   // omit-type projection\n      toPush = { $unset: {} };\n      keys.forEach(function (k) { toPush.$unset[k] = true });\n      toPush = model.modify(candidate, toPush);\n    }\n    if (keepId) {\n      toPush._id = candidate._id;\n    } else {\n      delete toPush._id;\n    }\n    res.push(toPush);\n  });\n\n  return res;\n};\n\n\n/**\n * Get all matching elements\n * Will return pointers to matched elements (shallow copies), returning full copies is the role of find or findOne\n * This is an internal function, use exec which uses the executor\n *\n * @param {Function} callback - Signature: err, results\n */\nCursor.prototype._exec = function(_callback) {\n  var res = [], added = 0, skipped = 0, self = this\n    , error = null\n    , i, keys, key\n    ;\n\n  function callback (error, res) {\n    if (self.execFn) {\n      return self.execFn(error, res, _callback);\n    } else {\n      return _callback(error, res);\n    }\n  }\n\n  this.db.getCandidates(this.query, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      for (i = 0; i < candidates.length; i += 1) {\n        if (model.match(candidates[i], self.query)) {\n          // If a sort is defined, wait for the results to be sorted before applying limit and skip\n          if (!self._sort) {\n            if (self._skip && self._skip > skipped) {\n              skipped += 1;\n            } else {\n              res.push(candidates[i]);\n              added += 1;\n              if (self._limit && self._limit <= added) { break; }\n            }\n          } else {\n            res.push(candidates[i]);\n          }\n        }\n      }\n    } catch (err) {\n      return callback(err);\n    }\n\n    // Apply all sorts\n    if (self._sort) {\n      keys = Object.keys(self._sort);\n\n      // Sorting\n      var criteria = [];\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        criteria.push({ key: key, direction: self._sort[key] });\n      }\n      res.sort(function(a, b) {\n        var criterion, compare, i;\n        for (i = 0; i < criteria.length; i++) {\n          criterion = criteria[i];\n          compare = criterion.direction * model.compareThings(model.getDotValue(a, criterion.key), model.getDotValue(b, criterion.key), self.db.compareStrings);\n          if (compare !== 0) {\n            return compare;\n          }\n        }\n        return 0;\n      });\n\n      // Applying limit and skip\n      var limit = self._limit || res.length\n        , skip = self._skip || 0;\n\n      res = res.slice(skip, skip + limit);\n    }\n\n    // Apply projection\n    try {\n      res = self.project(res);\n    } catch (e) {\n      error = e;\n      res = undefined;\n    }\n\n    return callback(error, res);\n  });\n};\n\nCursor.prototype.exec = function () {\n  this.db.executor.push({ this: this, fn: this._exec, arguments: arguments });\n};\n\n\n\n// Interface\nmodule.exports = Cursor;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.1\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [name], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/**\n * Way data is stored for this database\n * For a Node.js/Node Webkit database it's the file system\n * For a browser-side database it's localforage, which uses the best backend available (IndexedDB then WebSQL then localStorage)\n *\n * This version is the browser version\n */\n\nvar localforage = require('localforage')\n\n// Configure localforage to display NeDB name for now. Would be a good idea to let user use his own app name\nlocalforage.config({\n  name: 'NeDB'\n, storeName: 'nedbdata'\n});\n\n\nfunction exists (filename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value !== null) {   // Even if value is undefined, localforage returns null\n      return callback(true);\n    } else {\n      return callback(false);\n    }\n  });\n}\n\n\nfunction rename (filename, newFilename, callback) {\n  localforage.getItem(filename, function (err, value) {\n    if (value === null) {\n      localforage.removeItem(newFilename, function () { return callback(); });\n    } else {\n      localforage.setItem(newFilename, value, function () {\n        localforage.removeItem(filename, function () { return callback(); });\n      });\n    }\n  });\n}\n\n\nfunction writeFile (filename, contents, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.setItem(filename, contents, function () { return callback(); });\n}\n\n\nfunction appendFile (filename, toAppend, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n\n  localforage.getItem(filename, function (err, contents) {\n    contents = contents || '';\n    contents += toAppend;\n    localforage.setItem(filename, contents, function () { return callback(); });\n  });\n}\n\n\nfunction readFile (filename, options, callback) {\n  // Options do not matter in browser setup\n  if (typeof options === 'function') { callback = options; }\n  localforage.getItem(filename, function (err, contents) { return callback(null, contents || ''); });\n}\n\n\nfunction unlink (filename, callback) {\n  localforage.removeItem(filename, function () { return callback(); });\n}\n\n\n// Nothing to do, no directories will be used on the browser\nfunction mkdirp (dir, callback) {\n  return callback();\n}\n\n\n// Nothing to do, no data corruption possible in the brower\nfunction ensureDatafileIntegrity (filename, callback) {\n  return callback(null);\n}\n\n\n// Interface\nmodule.exports.exists = exists;\nmodule.exports.rename = rename;\nmodule.exports.writeFile = writeFile;\nmodule.exports.crashSafeWriteFile = writeFile;   // No need for a crash safe function in the browser\nmodule.exports.appendFile = appendFile;\nmodule.exports.readFile = readFile;\nmodule.exports.unlink = unlink;\nmodule.exports.mkdirp = mkdirp;\nmodule.exports.ensureDatafileIntegrity = ensureDatafileIntegrity;\n\n","/**\n * Handle every persistence-related task\n * The interface Datastore expects to be implemented is\n * * Persistence.loadDatabase(callback) and callback has signature err\n * * Persistence.persistNewState(newDocs, callback) where newDocs is an array of documents and callback has signature err\n */\n\nvar storage = require('./storage')\n  , path = require('path')\n  , model = require('./model')\n  , async = require('async')\n  , customUtils = require('./customUtils')\n  , Index = require('./indexes')\n  ;\n\n\n/**\n * Create a new Persistence object for database options.db\n * @param {Datastore} options.db\n * @param {Boolean} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n */\nfunction Persistence (options) {\n  var i, j, randomString;\n\n  this.db = options.db;\n  this.inMemoryOnly = this.db.inMemoryOnly;\n  this.filename = this.db.filename;\n  this.corruptAlertThreshold = options.corruptAlertThreshold !== undefined ? options.corruptAlertThreshold : 0.1;\n\n  if (!this.inMemoryOnly && this.filename && this.filename.charAt(this.filename.length - 1) === '~') {\n    throw new Error(\"The datafile name can't end with a ~, which is reserved for crash safe backup files\");\n  }\n\n  // After serialization and before deserialization hooks with some basic sanity checks\n  if (options.afterSerialization && !options.beforeDeserialization) {\n    throw new Error(\"Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  if (!options.afterSerialization && options.beforeDeserialization) {\n    throw new Error(\"Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss\");\n  }\n  this.afterSerialization = options.afterSerialization || function (s) { return s; };\n  this.beforeDeserialization = options.beforeDeserialization || function (s) { return s; };\n  for (i = 1; i < 30; i += 1) {\n    for (j = 0; j < 10; j += 1) {\n      randomString = customUtils.uid(i);\n      if (this.beforeDeserialization(this.afterSerialization(randomString)) !== randomString) {\n        throw new Error(\"beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss\");\n      }\n    }\n  }\n\n  // For NW apps, store data in the same directory where NW stores application data\n  if (this.filename && options.nodeWebkitAppName) {\n    console.log(\"==================================================================\");\n    console.log(\"WARNING: The nodeWebkitAppName option is deprecated\");\n    console.log(\"To get the path to the directory where Node Webkit stores the data\");\n    console.log(\"for your app, use the internal nw.gui module like this\");\n    console.log(\"require('nw.gui').App.dataPath\");\n    console.log(\"See https://github.com/rogerwang/node-webkit/issues/500\");\n    console.log(\"==================================================================\");\n    this.filename = Persistence.getNWAppFilename(options.nodeWebkitAppName, this.filename);\n  }\n};\n\n\n/**\n * Check if a directory exists and create it on the fly if it is not the case\n * cb is optional, signature: err\n */\nPersistence.ensureDirectoryExists = function (dir, cb) {\n  var callback = cb || function () {}\n    ;\n\n  storage.mkdirp(dir, function (err) { return callback(err); });\n};\n\n\n\n\n/**\n * Return the path the datafile if the given filename is relative to the directory where Node Webkit stores\n * data for this application. Probably the best place to store data\n */\nPersistence.getNWAppFilename = function (appName, relativeFilename) {\n  var home;\n\n  switch (process.platform) {\n    case 'win32':\n    case 'win64':\n      home = process.env.LOCALAPPDATA || process.env.APPDATA;\n      if (!home) { throw new Error(\"Couldn't find the base application data folder\"); }\n      home = path.join(home, appName);\n      break;\n    case 'darwin':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, 'Library', 'Application Support', appName);\n      break;\n    case 'linux':\n      home = process.env.HOME;\n      if (!home) { throw new Error(\"Couldn't find the base application data directory\"); }\n      home = path.join(home, '.config', appName);\n      break;\n    default:\n      throw new Error(\"Can't use the Node Webkit relative path for platform \" + process.platform);\n      break;\n  }\n\n  return path.join(home, 'nedb-data', relativeFilename);\n}\n\n\n/**\n * Persist cached database\n * This serves as a compaction function since the cache always contains only the number of documents in the collection\n * while the data file is append-only so it may grow larger\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.persistCachedDatabase = function (cb) {\n  var callback = cb || function () {}\n    , toPersist = ''\n    , self = this\n    ;\n\n  if (this.inMemoryOnly) { return callback(null); }\n\n  this.db.getAllData().forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n  Object.keys(this.db.indexes).forEach(function (fieldName) {\n    if (fieldName != \"_id\") {   // The special _id index is managed by datastore.js, the others need to be persisted\n      toPersist += self.afterSerialization(model.serialize({ $$indexCreated: { fieldName: fieldName, unique: self.db.indexes[fieldName].unique, sparse: self.db.indexes[fieldName].sparse }})) + '\\n';\n    }\n  });\n\n  storage.crashSafeWriteFile(this.filename, toPersist, function (err) {\n    if (err) { return callback(err); }\n    self.db.emit('compaction.done');\n    return callback(null);\n  });\n};\n\n\n/**\n * Queue a rewrite of the datafile\n */\nPersistence.prototype.compactDatafile = function () {\n  this.db.executor.push({ this: this, fn: this.persistCachedDatabase, arguments: [] });\n};\n\n\n/**\n * Set automatic compaction every interval ms\n * @param {Number} interval in milliseconds, with an enforced minimum of 5 seconds\n */\nPersistence.prototype.setAutocompactionInterval = function (interval) {\n  var self = this\n    , minInterval = 5000\n    , realInterval = Math.max(interval || 0, minInterval)\n    ;\n\n  this.stopAutocompaction();\n\n  this.autocompactionIntervalId = setInterval(function () {\n    self.compactDatafile();\n  }, realInterval);\n};\n\n\n/**\n * Stop autocompaction (do nothing if autocompaction was not running)\n */\nPersistence.prototype.stopAutocompaction = function () {\n  if (this.autocompactionIntervalId) { clearInterval(this.autocompactionIntervalId); }\n};\n\n\n/**\n * Persist new state for the given newDocs (can be insertion, update or removal)\n * Use an append-only format\n * @param {Array} newDocs Can be empty if no doc was updated/removed\n * @param {Function} cb Optional, signature: err\n */\nPersistence.prototype.persistNewState = function (newDocs, cb) {\n  var self = this\n    , toPersist = ''\n    , callback = cb || function () {}\n    ;\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  newDocs.forEach(function (doc) {\n    toPersist += self.afterSerialization(model.serialize(doc)) + '\\n';\n  });\n\n  if (toPersist.length === 0) { return callback(null); }\n\n  storage.appendFile(self.filename, toPersist, 'utf8', function (err) {\n    return callback(err);\n  });\n};\n\n\n/**\n * From a database's raw data, return the corresponding\n * machine understandable collection\n */\nPersistence.prototype.treatRawData = function (rawData) {\n  var data = rawData.split('\\n')\n    , dataById = {}\n    , tdata = []\n    , i\n    , indexes = {}\n    , corruptItems = -1   // Last line of every data file is usually blank so not really corrupt\n    ;\n\n  for (i = 0; i < data.length; i += 1) {\n    var doc;\n\n    try {\n      doc = model.deserialize(this.beforeDeserialization(data[i]));\n      if (doc._id) {\n        if (doc.$$deleted === true) {\n          delete dataById[doc._id];\n        } else {\n          dataById[doc._id] = doc;\n        }\n      } else if (doc.$$indexCreated && doc.$$indexCreated.fieldName != undefined) {\n        indexes[doc.$$indexCreated.fieldName] = doc.$$indexCreated;\n      } else if (typeof doc.$$indexRemoved === \"string\") {\n        delete indexes[doc.$$indexRemoved];\n      }\n    } catch (e) {\n      corruptItems += 1;\n    }\n  }\n\n  // A bit lenient on corruption\n  if (data.length > 0 && corruptItems / data.length > this.corruptAlertThreshold) {\n    throw new Error(\"More than \" + Math.floor(100 * this.corruptAlertThreshold) + \"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss\");\n  }\n\n  Object.keys(dataById).forEach(function (k) {\n    tdata.push(dataById[k]);\n  });\n\n  return { data: tdata, indexes: indexes };\n};\n\n\n/**\n * Load the database\n * 1) Create all indexes\n * 2) Insert all data\n * 3) Compact the database\n * This means pulling data out of the data file or creating it if it doesn't exist\n * Also, all data is persisted right away, which has the effect of compacting the database file\n * This operation is very quick at startup for a big collection (60ms for ~10k docs)\n * @param {Function} cb Optional callback, signature: err\n */\nPersistence.prototype.loadDatabase = function (cb) {\n  var callback = cb || function () {}\n    , self = this\n    ;\n\n  self.db.resetIndexes();\n\n  // In-memory only datastore\n  if (self.inMemoryOnly) { return callback(null); }\n\n  async.waterfall([\n    function (cb) {\n      Persistence.ensureDirectoryExists(path.dirname(self.filename), function (err) {\n        storage.ensureDatafileIntegrity(self.filename, function (err) {\n          storage.readFile(self.filename, 'utf8', function (err, rawData) {\n            if (err) { return cb(err); }\n\n            try {\n              var treatedData = self.treatRawData(rawData);\n            } catch (e) {\n              return cb(e);\n            }\n\n            // Recreate all indexes in the datafile\n            Object.keys(treatedData.indexes).forEach(function (key) {\n              self.db.indexes[key] = new Index(treatedData.indexes[key]);\n            });\n\n            // Fill cached database (i.e. all indexes) with data\n            try {\n              self.db.resetIndexes(treatedData.data);\n            } catch (e) {\n              self.db.resetIndexes();   // Rollback any index which didn't fail\n              return cb(e);\n            }\n\n            self.db.persistence.persistCachedDatabase(cb);\n          });\n        });\n      });\n    }\n  ], function (err) {\n       if (err) { return callback(err); }\n\n       self.db.executor.processBuffer();\n       return callback(null);\n     });\n};\n\n\n// Interface\nmodule.exports = Persistence;\n","/**\n * Self-balancing binary search tree using the AVL implementation\n */\nvar BinarySearchTree = require('./bst')\n  , customUtils = require('./customUtils')\n  , util = require('util')\n  , _ = require('underscore')\n  ;\n\n\n/**\n * Constructor\n * We can't use a direct pointer to the root node (as in the simple binary search tree)\n * as the root will change during tree rotations\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction AVLTree (options) {\n  this.tree = new _AVLTree(options);\n}\n\n\n/**\n * Constructor of the internal AVLTree\n * @param {Object} options Optional\n * @param {Boolean}  options.unique Whether to enforce a 'unique' constraint on the key or not\n * @param {Key}      options.key Initialize this BST's key with key\n * @param {Value}    options.value Initialize this BST's data with [value]\n * @param {Function} options.compareKeys Initialize this BST's compareKeys\n */\nfunction _AVLTree (options) {\n  options = options || {};\n\n  this.left = null;\n  this.right = null;\n  this.parent = options.parent !== undefined ? options.parent : null;\n  if (options.hasOwnProperty('key')) { this.key = options.key; }\n  this.data = options.hasOwnProperty('value') ? [options.value] : [];\n  this.unique = options.unique || false;\n\n  this.compareKeys = options.compareKeys || customUtils.defaultCompareKeysFunction;\n  this.checkValueEquality = options.checkValueEquality || customUtils.defaultCheckValueEquality;\n}\n\n\n/**\n * Inherit basic functions from the basic binary search tree\n */\nutil.inherits(_AVLTree, BinarySearchTree);\n\n/**\n * Keep a pointer to the internal tree constructor for testing purposes\n */\nAVLTree._AVLTree = _AVLTree;\n\n\n/**\n * Check the recorded height is correct for every node\n * Throws if one height doesn't match\n */\n_AVLTree.prototype.checkHeightCorrect = function () {\n  var leftH, rightH;\n\n  if (!this.hasOwnProperty('key')) { return; }   // Empty tree\n\n  if (this.left && this.left.height === undefined) { throw new Error(\"Undefined height for node \" + this.left.key); }\n  if (this.right && this.right.height === undefined) { throw new Error(\"Undefined height for node \" + this.right.key); }\n  if (this.height === undefined) { throw new Error(\"Undefined height for node \" + this.key); }\n\n  leftH = this.left ? this.left.height : 0;\n  rightH = this.right ? this.right.height : 0;\n\n  if (this.height !== 1 + Math.max(leftH, rightH)) { throw new Error(\"Height constraint failed for node \" + this.key); }\n  if (this.left) { this.left.checkHeightCorrect(); }\n  if (this.right) { this.right.checkHeightCorrect(); }\n};\n\n\n/**\n * Return the balance factor\n */\n_AVLTree.prototype.balanceFactor = function () {\n  var leftH = this.left ? this.left.height : 0\n    , rightH = this.right ? this.right.height : 0\n    ;\n  return leftH - rightH;\n};\n\n\n/**\n * Check that the balance factors are all between -1 and 1\n */\n_AVLTree.prototype.checkBalanceFactors = function () {\n  if (Math.abs(this.balanceFactor()) > 1) { throw new Error('Tree is unbalanced at node ' + this.key); }\n\n  if (this.left) { this.left.checkBalanceFactors(); }\n  if (this.right) { this.right.checkBalanceFactors(); }\n};\n\n\n/**\n * When checking if the BST conditions are met, also check that the heights are correct\n * and the tree is balanced\n */\n_AVLTree.prototype.checkIsAVLT = function () {\n  _AVLTree.super_.prototype.checkIsBST.call(this);\n  this.checkHeightCorrect();\n  this.checkBalanceFactors();\n};\nAVLTree.prototype.checkIsAVLT = function () { this.tree.checkIsAVLT(); };\n\n\n/**\n * Perform a right rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.rightRotation = function () {\n  var q = this\n    , p = this.left\n    , b\n    , ah, bh, ch;\n\n  if (!p) { return this; }   // No change\n\n  b = p.right;\n\n  // Alter tree structure\n  if (q.parent) {\n    p.parent = q.parent;\n    if (q.parent.left === q) { q.parent.left = p; } else { q.parent.right = p; }\n  } else {\n    p.parent = null;\n  }\n  p.right = q;\n  q.parent = p;\n  q.left = b;\n  if (b) { b.parent = q; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  q.height = Math.max(bh, ch) + 1;\n  p.height = Math.max(ah, q.height) + 1;\n\n  return p;\n};\n\n\n/**\n * Perform a left rotation of the tree if possible\n * and return the root of the resulting tree\n * The resulting tree's nodes' heights are also updated\n */\n_AVLTree.prototype.leftRotation = function () {\n  var p = this\n    , q = this.right\n    , b\n    , ah, bh, ch;\n\n  if (!q) { return this; }   // No change\n\n  b = q.left;\n\n  // Alter tree structure\n  if (p.parent) {\n    q.parent = p.parent;\n    if (p.parent.left === p) { p.parent.left = q; } else { p.parent.right = q; }\n  } else {\n    q.parent = null;\n  }\n  q.left = p;\n  p.parent = q;\n  p.right = b;\n  if (b) { b.parent = p; }\n\n  // Update heights\n  ah = p.left ? p.left.height : 0;\n  bh = b ? b.height : 0;\n  ch = q.right ? q.right.height : 0;\n  p.height = Math.max(ah, bh) + 1;\n  q.height = Math.max(ch, p.height) + 1;\n\n  return q;\n};\n\n\n/**\n * Modify the tree if its right subtree is too small compared to the left\n * Return the new root if any\n */\n_AVLTree.prototype.rightTooSmall = function () {\n  if (this.balanceFactor() <= 1) { return this; }   // Right is not too small, don't change\n\n  if (this.left.balanceFactor() < 0) {\n    this.left.leftRotation();\n  }\n\n  return this.rightRotation();\n};\n\n\n/**\n * Modify the tree if its left subtree is too small compared to the right\n * Return the new root if any\n */\n_AVLTree.prototype.leftTooSmall = function () {\n  if (this.balanceFactor() >= -1) { return this; }   // Left is not too small, don't change\n\n  if (this.right.balanceFactor() > 0) {\n    this.right.rightRotation();\n  }\n\n  return this.leftRotation();\n};\n\n\n/**\n * Rebalance the tree along the given path. The path is given reversed (as he was calculated\n * in the insert and delete functions).\n * Returns the new root of the tree\n * Of course, the first element of the path must be the root of the tree\n */\n_AVLTree.prototype.rebalanceAlongPath = function (path) {\n  var newRoot = this\n    , rotated\n    , i;\n\n  if (!this.hasOwnProperty('key')) { delete this.height; return this; }   // Empty tree\n\n  // Rebalance the tree and update all heights\n  for (i = path.length - 1; i >= 0; i -= 1) {\n    path[i].height = 1 + Math.max(path[i].left ? path[i].left.height : 0, path[i].right ? path[i].right.height : 0);\n\n    if (path[i].balanceFactor() > 1) {\n      rotated = path[i].rightTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n\n    if (path[i].balanceFactor() < -1) {\n      rotated = path[i].leftTooSmall();\n      if (i === 0) { newRoot = rotated; }\n    }\n  }\n\n  return newRoot;\n};\n\n\n/**\n * Insert a key, value pair in the tree while maintaining the AVL tree height constraint\n * Return a pointer to the root node, which may have changed\n */\n_AVLTree.prototype.insert = function (key, value) {\n  var insertPath = []\n    , currentNode = this\n    ;\n\n  // Empty tree, insert as root\n  if (!this.hasOwnProperty('key')) {\n    this.key = key;\n    this.data.push(value);\n    this.height = 1;\n    return this;\n  }\n\n  // Insert new leaf at the right place\n  while (true) {\n    // Same key: no change in the tree structure\n    if (currentNode.compareKeys(currentNode.key, key) === 0) {\n      if (currentNode.unique) {\n        var err = new Error(\"Can't insert key \" + key + \", it violates the unique constraint\");\n        err.key = key;\n        err.errorType = 'uniqueViolated';\n        throw err;\n      } else {\n        currentNode.data.push(value);\n      }\n      return this;\n    }\n\n    insertPath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (!currentNode.left) {\n        insertPath.push(currentNode.createLeftChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.left;\n      }\n    } else {\n      if (!currentNode.right) {\n        insertPath.push(currentNode.createRightChild({ key: key, value: value }));\n        break;\n      } else {\n        currentNode = currentNode.right;\n      }\n    }\n  }\n\n  return this.rebalanceAlongPath(insertPath);\n};\n\n// Insert in the internal tree, update the pointer to the root if needed\nAVLTree.prototype.insert = function (key, value) {\n  var newTree = this.tree.insert(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Delete a key or just a value and return the new root of the tree\n * @param {Key} key\n * @param {Value} value Optional. If not set, the whole key is deleted. If set, only this value is deleted\n */\n_AVLTree.prototype.delete = function (key, value) {\n  var newData = [], replaceWith\n    , self = this\n    , currentNode = this\n    , deletePath = []\n    ;\n\n  if (!this.hasOwnProperty('key')) { return this; }   // Empty tree\n\n  // Either no match is found and the function will return from within the loop\n  // Or a match is found and deletePath will contain the path from the root to the node to delete after the loop\n  while (true) {\n    if (currentNode.compareKeys(key, currentNode.key) === 0) { break; }\n\n    deletePath.push(currentNode);\n\n    if (currentNode.compareKeys(key, currentNode.key) < 0) {\n      if (currentNode.left) {\n        currentNode = currentNode.left;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    } else {\n      // currentNode.compareKeys(key, currentNode.key) is > 0\n      if (currentNode.right) {\n        currentNode = currentNode.right;\n      } else {\n        return this;   // Key not found, no modification\n      }\n    }\n  }\n\n  // Delete only a value (no tree modification)\n  if (currentNode.data.length > 1 && value) {\n    currentNode.data.forEach(function (d) {\n      if (!currentNode.checkValueEquality(d, value)) { newData.push(d); }\n    });\n    currentNode.data = newData;\n    return this;\n  }\n\n  // Delete a whole node\n\n  // Leaf\n  if (!currentNode.left && !currentNode.right) {\n    if (currentNode === this) {   // This leaf is also the root\n      delete currentNode.key;\n      currentNode.data = [];\n      delete currentNode.height;\n      return this;\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = null;\n      } else {\n        currentNode.parent.right = null;\n      }\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with only one child\n  if (!currentNode.left || !currentNode.right) {\n    replaceWith = currentNode.left ? currentNode.left : currentNode.right;\n\n    if (currentNode === this) {   // This node is also the root\n      replaceWith.parent = null;\n      return replaceWith;   // height of replaceWith is necessarily 1 because the tree was balanced before deletion\n    } else {\n      if (currentNode.parent.left === currentNode) {\n        currentNode.parent.left = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      } else {\n        currentNode.parent.right = replaceWith;\n        replaceWith.parent = currentNode.parent;\n      }\n\n      return this.rebalanceAlongPath(deletePath);\n    }\n  }\n\n\n  // Node with two children\n  // Use the in-order predecessor (no need to randomize since we actively rebalance)\n  deletePath.push(currentNode);\n  replaceWith = currentNode.left;\n\n  // Special case: the in-order predecessor is right below the node to delete\n  if (!replaceWith.right) {\n    currentNode.key = replaceWith.key;\n    currentNode.data = replaceWith.data;\n    currentNode.left = replaceWith.left;\n    if (replaceWith.left) { replaceWith.left.parent = currentNode; }\n    return this.rebalanceAlongPath(deletePath);\n  }\n\n  // After this loop, replaceWith is the right-most leaf in the left subtree\n  // and deletePath the path from the root (inclusive) to replaceWith (exclusive)\n  while (true) {\n    if (replaceWith.right) {\n      deletePath.push(replaceWith);\n      replaceWith = replaceWith.right;\n    } else {\n      break;\n    }\n  }\n\n  currentNode.key = replaceWith.key;\n  currentNode.data = replaceWith.data;\n\n  replaceWith.parent.right = replaceWith.left;\n  if (replaceWith.left) { replaceWith.left.parent = replaceWith.parent; }\n\n  return this.rebalanceAlongPath(deletePath);\n};\n\n// Delete a value\nAVLTree.prototype.delete = function (key, value) {\n  var newTree = this.tree.delete(key, value);\n\n  // If newTree is undefined, that means its structure was not modified\n  if (newTree) { this.tree = newTree; }\n};\n\n\n/**\n * Other functions we want to use on an AVLTree as if it were the internal _AVLTree\n */\n['getNumberOfKeys', 'search', 'betweenBounds', 'prettyPrint', 'executeOnEveryNode'].forEach(function (fn) {\n  AVLTree.prototype[fn] = function () {\n    return this.tree[fn].apply(this.tree, arguments);\n  };\n});\n\n\n// Interface\nmodule.exports = AVLTree;\n","module.exports.BinarySearchTree = require('./lib/bst');\nmodule.exports.AVLTree = require('./lib/avltree');\n","/**\n * Responsible for sequentially executing actions on the database\n */\n\nvar async = require('async')\n  ;\n\nfunction Executor () {\n  this.buffer = [];\n  this.ready = false;\n\n  // This queue will execute all commands, one-by-one in order\n  this.queue = async.queue(function (task, cb) {\n    var newArguments = [];\n\n    // task.arguments is an array-like object on which adding a new field doesn't work, so we transform it into a real array\n    for (var i = 0; i < task.arguments.length; i += 1) { newArguments.push(task.arguments[i]); }\n    var lastArg = task.arguments[task.arguments.length - 1];\n\n    // Always tell the queue task is complete. Execute callback if any was given.\n    if (typeof lastArg === 'function') {\n      // Callback was supplied\n      newArguments[newArguments.length - 1] = function () {\n        if (typeof setImmediate === 'function') {\n           setImmediate(cb);\n        } else {\n          process.nextTick(cb);\n        }\n        lastArg.apply(null, arguments);\n      };\n    } else if (!lastArg && task.arguments.length !== 0) {\n      // false/undefined/null supplied as callbback\n      newArguments[newArguments.length - 1] = function () { cb(); };\n    } else {\n      // Nothing supplied as callback\n      newArguments.push(function () { cb(); });\n    }\n\n\n    task.fn.apply(task.this, newArguments);\n  }, 1);\n}\n\n\n/**\n * If executor is ready, queue task (and process it immediately if executor was idle)\n * If not, buffer task for later processing\n * @param {Object} task\n *                 task.this - Object to use as this\n *                 task.fn - Function to execute\n *                 task.arguments - Array of arguments, IMPORTANT: only the last argument may be a function (the callback)\n *                                                                 and the last argument cannot be false/undefined/null\n * @param {Boolean} forceQueuing Optional (defaults to false) force executor to queue task even if it is not ready\n */\nExecutor.prototype.push = function (task, forceQueuing) {\n  if (this.ready || forceQueuing) {\n    this.queue.push(task);\n  } else {\n    this.buffer.push(task);\n  }\n};\n\n\n/**\n * Queue all tasks in buffer (in the same order they came in)\n * Automatically sets executor as ready\n */\nExecutor.prototype.processBuffer = function () {\n  var i;\n  this.ready = true;\n  for (i = 0; i < this.buffer.length; i += 1) { this.queue.push(this.buffer[i]); }\n  this.buffer = [];\n};\n\n\n\n// Interface\nmodule.exports = Executor;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","var customUtils = require('./customUtils')\n  , model = require('./model')\n  , async = require('async')\n  , Executor = require('./executor')\n  , Index = require('./indexes')\n  , util = require('util')\n  , _ = require('underscore')\n  , Persistence = require('./persistence')\n  , Cursor = require('./cursor')\n  ;\n\n\n/**\n * Create a new collection\n * @param {String} options.filename Optional, datastore will be in-memory only if not provided\n * @param {Boolean} options.timestampData Optional, defaults to false. If set to true, createdAt and updatedAt will be created and populated automatically (if not specified by user)\n * @param {Boolean} options.inMemoryOnly Optional, defaults to false\n * @param {String} options.nodeWebkitAppName Optional, specify the name of your NW app if you want options.filename to be relative to the directory where\n *                                            Node Webkit stores application data such as cookies and local storage (the best place to store data in my opinion)\n * @param {Boolean} options.autoload Optional, defaults to false\n * @param {Function} options.onload Optional, if autoload is used this will be called after the load database with the error object as parameter. If you don't pass it the error will be thrown\n * @param {Function} options.afterSerialization/options.beforeDeserialization Optional, serialization hooks\n * @param {Number} options.corruptAlertThreshold Optional, threshold after which an alert is thrown if too much data is corrupt\n * @param {Function} options.compareStrings Optional, string comparison function that overrides default for sorting\n *\n * Event Emitter - Events\n * * compaction.done - Fired whenever a compaction operation was finished\n */\nfunction Datastore (options) {\n  var filename;\n\n  // Retrocompatibility with v0.6 and before\n  if (typeof options === 'string') {\n    filename = options;\n    this.inMemoryOnly = false;   // Default\n  } else {\n    options = options || {};\n    filename = options.filename;\n    this.inMemoryOnly = options.inMemoryOnly || false;\n    this.autoload = options.autoload || false;\n    this.timestampData = options.timestampData || false;\n  }\n\n  // Determine whether in memory or persistent\n  if (!filename || typeof filename !== 'string' || filename.length === 0) {\n    this.filename = null;\n    this.inMemoryOnly = true;\n  } else {\n    this.filename = filename;\n  }\n\n  // String comparison function\n  this.compareStrings = options.compareStrings;\n\n  // Persistence handling\n  this.persistence = new Persistence({ db: this, nodeWebkitAppName: options.nodeWebkitAppName\n                                      , afterSerialization: options.afterSerialization\n                                      , beforeDeserialization: options.beforeDeserialization\n                                      , corruptAlertThreshold: options.corruptAlertThreshold\n                                      });\n\n  // This new executor is ready if we don't use persistence\n  // If we do, it will only be ready once loadDatabase is called\n  this.executor = new Executor();\n  if (this.inMemoryOnly) { this.executor.ready = true; }\n\n  // Indexed by field name, dot notation can be used\n  // _id is always indexed and since _ids are generated randomly the underlying\n  // binary is always well-balanced\n  this.indexes = {};\n  this.indexes._id = new Index({ fieldName: '_id', unique: true });\n  this.ttlIndexes = {};\n\n  // Queue a load of the database right away and call the onload handler\n  // By default (no onload handler), if there is an error there, no operation will be possible so warn the user by throwing an exception\n  if (this.autoload) { this.loadDatabase(options.onload || function (err) {\n    if (err) { throw err; }\n  }); }\n}\n\nutil.inherits(Datastore, require('events').EventEmitter);\n\n\n/**\n * Load the database from the datafile, and trigger the execution of buffered commands if any\n */\nDatastore.prototype.loadDatabase = function () {\n  this.executor.push({ this: this.persistence, fn: this.persistence.loadDatabase, arguments: arguments }, true);\n};\n\n\n/**\n * Get an array of all the data in the database\n */\nDatastore.prototype.getAllData = function () {\n  return this.indexes._id.getAll();\n};\n\n\n/**\n * Reset all currently defined indexes\n */\nDatastore.prototype.resetIndexes = function (newData) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].reset(newData);\n  });\n};\n\n\n/**\n * Ensure an index is kept for this field. Same parameters as lib/indexes\n * For now this function is synchronous, we need to test how much time it takes\n * We use an async API for consistency with the rest of the code\n * @param {String} options.fieldName\n * @param {Boolean} options.unique\n * @param {Boolean} options.sparse\n * @param {Number} options.expireAfterSeconds - Optional, if set this index becomes a TTL index (only works on Date fields, not arrays of Date)\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.ensureIndex = function (options, cb) {\n  var err\n    , callback = cb || function () {};\n\n  options = options || {};\n\n  if (!options.fieldName) {\n    err = new Error(\"Cannot create an index without a fieldName\");\n    err.missingFieldName = true;\n    return callback(err);\n  }\n  if (this.indexes[options.fieldName]) { return callback(null); }\n\n  this.indexes[options.fieldName] = new Index(options);\n  if (options.expireAfterSeconds !== undefined) { this.ttlIndexes[options.fieldName] = options.expireAfterSeconds; }   // With this implementation index creation is not necessary to ensure TTL but we stick with MongoDB's API here\n\n  try {\n    this.indexes[options.fieldName].insert(this.getAllData());\n  } catch (e) {\n    delete this.indexes[options.fieldName];\n    return callback(e);\n  }\n\n  // We may want to force all options to be persisted including defaults, not just the ones passed the index creation function\n  this.persistence.persistNewState([{ $$indexCreated: options }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Remove an index\n * @param {String} fieldName\n * @param {Function} cb Optional callback, signature: err\n */\nDatastore.prototype.removeIndex = function (fieldName, cb) {\n  var callback = cb || function () {};\n\n  delete this.indexes[fieldName];\n\n  this.persistence.persistNewState([{ $$indexRemoved: fieldName }], function (err) {\n    if (err) { return callback(err); }\n    return callback(null);\n  });\n};\n\n\n/**\n * Add one or several document(s) to all indexes\n */\nDatastore.prototype.addToIndexes = function (doc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].insert(doc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the insert on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].remove(doc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Remove one or several document(s) from all indexes\n */\nDatastore.prototype.removeFromIndexes = function (doc) {\n  var self = this;\n\n  Object.keys(this.indexes).forEach(function (i) {\n    self.indexes[i].remove(doc);\n  });\n};\n\n\n/**\n * Update one or several documents in all indexes\n * To update multiple documents, oldDoc must be an array of { oldDoc, newDoc } pairs\n * If one update violates a constraint, all changes are rolled back\n */\nDatastore.prototype.updateIndexes = function (oldDoc, newDoc) {\n  var i, failingIndex, error\n    , keys = Object.keys(this.indexes)\n    ;\n\n  for (i = 0; i < keys.length; i += 1) {\n    try {\n      this.indexes[keys[i]].update(oldDoc, newDoc);\n    } catch (e) {\n      failingIndex = i;\n      error = e;\n      break;\n    }\n  }\n\n  // If an error happened, we need to rollback the update on all other indexes\n  if (error) {\n    for (i = 0; i < failingIndex; i += 1) {\n      this.indexes[keys[i]].revertUpdate(oldDoc, newDoc);\n    }\n\n    throw error;\n  }\n};\n\n\n/**\n * Return the list of candidates for a given query\n * Crude implementation for now, we return the candidates given by the first usable index if any\n * We try the following query types, in this order: basic match, $in match, comparison match\n * One way to make it better would be to enable the use of multiple indexes if the first usable index\n * returns too much data. I may do it in the future.\n *\n * Returned candidates will be scanned to find and remove all expired documents\n *\n * @param {Query} query\n * @param {Boolean} dontExpireStaleDocs Optional, defaults to false, if true don't remove stale docs. Useful for the remove function which shouldn't be impacted by expirations\n * @param {Function} callback Signature err, docs\n */\nDatastore.prototype.getCandidates = function (query, dontExpireStaleDocs, callback) {\n  var indexNames = Object.keys(this.indexes)\n    , self = this\n    , usableQueryKeys;\n\n  if (typeof dontExpireStaleDocs === 'function') {\n    callback = dontExpireStaleDocs;\n    dontExpireStaleDocs = false;\n  }\n\n  async.waterfall([\n  // STEP 1: get candidates list by checking indexes from most to least frequent usecase\n  function (cb) {\n    // For a basic match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (typeof query[k] === 'string' || typeof query[k] === 'number' || typeof query[k] === 'boolean' || util.isDate(query[k]) || query[k] === null) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]]));\n    }\n\n    // For a $in match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && query[k].hasOwnProperty('$in')) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getMatching(query[usableQueryKeys[0]].$in));\n    }\n\n    // For a comparison match\n    usableQueryKeys = [];\n    Object.keys(query).forEach(function (k) {\n      if (query[k] && (query[k].hasOwnProperty('$lt') || query[k].hasOwnProperty('$lte') || query[k].hasOwnProperty('$gt') || query[k].hasOwnProperty('$gte'))) {\n        usableQueryKeys.push(k);\n      }\n    });\n    usableQueryKeys = _.intersection(usableQueryKeys, indexNames);\n    if (usableQueryKeys.length > 0) {\n      return cb(null, self.indexes[usableQueryKeys[0]].getBetweenBounds(query[usableQueryKeys[0]]));\n    }\n\n    // By default, return all the DB data\n    return cb(null, self.getAllData());\n  }\n  // STEP 2: remove all expired documents\n  , function (docs) {\n    if (dontExpireStaleDocs) { return callback(null, docs); }\n\n    var expiredDocsIds = [], validDocs = [], ttlIndexesFieldNames = Object.keys(self.ttlIndexes);\n\n    docs.forEach(function (doc) {\n      var valid = true;\n      ttlIndexesFieldNames.forEach(function (i) {\n        if (doc[i] !== undefined && util.isDate(doc[i]) && Date.now() > doc[i].getTime() + self.ttlIndexes[i] * 1000) {\n          valid = false;\n        }\n      });\n      if (valid) { validDocs.push(doc); } else { expiredDocsIds.push(doc._id); }\n    });\n\n    async.eachSeries(expiredDocsIds, function (_id, cb) {\n      self._remove({ _id: _id }, {}, function (err) {\n        if (err) { return callback(err); }\n        return cb();\n      });\n    }, function (err) {\n      return callback(null, validDocs);\n    });\n  }]);\n};\n\n\n/**\n * Insert a new document\n * @param {Function} cb Optional callback, signature: err, insertedDoc\n *\n * @api private Use Datastore.insert which has the same signature\n */\nDatastore.prototype._insert = function (newDoc, cb) {\n  var callback = cb || function () {}\n    , preparedDoc\n    ;\n\n  try {\n    preparedDoc = this.prepareDocumentForInsertion(newDoc)\n    this._insertInCache(preparedDoc);\n  } catch (e) {\n    return callback(e);\n  }\n\n  this.persistence.persistNewState(util.isArray(preparedDoc) ? preparedDoc : [preparedDoc], function (err) {\n    if (err) { return callback(err); }\n    return callback(null, model.deepCopy(preparedDoc));\n  });\n};\n\n/**\n * Create a new _id that's not already in use\n */\nDatastore.prototype.createNewId = function () {\n  var tentativeId = customUtils.uid(16);\n  // Try as many times as needed to get an unused _id. As explained in customUtils, the probability of this ever happening is extremely small, so this is O(1)\n  if (this.indexes._id.getMatching(tentativeId).length > 0) {\n    tentativeId = this.createNewId();\n  }\n  return tentativeId;\n};\n\n/**\n * Prepare a document (or array of documents) to be inserted in a database\n * Meaning adds _id and timestamps if necessary on a copy of newDoc to avoid any side effect on user input\n * @api private\n */\nDatastore.prototype.prepareDocumentForInsertion = function (newDoc) {\n  var preparedDoc, self = this;\n\n  if (util.isArray(newDoc)) {\n    preparedDoc = [];\n    newDoc.forEach(function (doc) { preparedDoc.push(self.prepareDocumentForInsertion(doc)); });\n  } else {\n    preparedDoc = model.deepCopy(newDoc);\n    if (preparedDoc._id === undefined) { preparedDoc._id = this.createNewId(); }\n    var now = new Date();\n    if (this.timestampData && preparedDoc.createdAt === undefined) { preparedDoc.createdAt = now; }\n    if (this.timestampData && preparedDoc.updatedAt === undefined) { preparedDoc.updatedAt = now; }\n    model.checkObject(preparedDoc);\n  }\n\n  return preparedDoc;\n};\n\n/**\n * If newDoc is an array of documents, this will insert all documents in the cache\n * @api private\n */\nDatastore.prototype._insertInCache = function (preparedDoc) {\n  if (util.isArray(preparedDoc)) {\n    this._insertMultipleDocsInCache(preparedDoc);\n  } else {\n    this.addToIndexes(preparedDoc);\n  }\n};\n\n/**\n * If one insertion fails (e.g. because of a unique constraint), roll back all previous\n * inserts and throws the error\n * @api private\n */\nDatastore.prototype._insertMultipleDocsInCache = function (preparedDocs) {\n  var i, failingI, error;\n\n  for (i = 0; i < preparedDocs.length; i += 1) {\n    try {\n      this.addToIndexes(preparedDocs[i]);\n    } catch (e) {\n      error = e;\n      failingI = i;\n      break;\n    }\n  }\n\n  if (error) {\n    for (i = 0; i < failingI; i += 1) {\n      this.removeFromIndexes(preparedDocs[i]);\n    }\n\n    throw error;\n  }\n};\n\nDatastore.prototype.insert = function () {\n  this.executor.push({ this: this, fn: this._insert, arguments: arguments });\n};\n\n\n/**\n * Count all documents matching the query\n * @param {Object} query MongoDB-style query\n */\nDatastore.prototype.count = function(query, callback) {\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    return callback(null, docs.length);\n  });\n\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find all documents matching the query\n * If no callback is passed, we return the cursor so that user can limit, skip and finally exec\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.find = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    var res = [], i;\n\n    if (err) { return callback(err); }\n\n    for (i = 0; i < docs.length; i += 1) {\n      res.push(model.deepCopy(docs[i]));\n    }\n    return callback(null, res);\n  });\n\n  cursor.projection(projection);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Find one document matching the query\n * @param {Object} query MongoDB-style query\n * @param {Object} projection MongoDB-style projection\n */\nDatastore.prototype.findOne = function (query, projection, callback) {\n  switch (arguments.length) {\n    case 1:\n      projection = {};\n      // callback is undefined, will return a cursor\n      break;\n    case 2:\n      if (typeof projection === 'function') {\n        callback = projection;\n        projection = {};\n      }   // If not assume projection is an object and callback undefined\n      break;\n  }\n\n  var cursor = new Cursor(this, query, function(err, docs, callback) {\n    if (err) { return callback(err); }\n    if (docs.length === 1) {\n      return callback(null, model.deepCopy(docs[0]));\n    } else {\n      return callback(null, null);\n    }\n  });\n\n  cursor.projection(projection).limit(1);\n  if (typeof callback === 'function') {\n    cursor.exec(callback);\n  } else {\n    return cursor;\n  }\n};\n\n\n/**\n * Update all docs matching query\n * @param {Object} query\n * @param {Object} updateQuery\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n *                 options.upsert If true, document is inserted if the query doesn't match anything\n *                 options.returnUpdatedDocs Defaults to false, if true return as third argument the array of updated matched documents (even if no change actually took place)\n * @param {Function} cb Optional callback, signature: (err, numAffected, affectedDocuments, upsert)\n *                      If update was an upsert, upsert flag is set to true\n *                      affectedDocuments can be one of the following:\n *                        * For an upsert, the upserted document\n *                        * For an update with returnUpdatedDocs option false, null\n *                        * For an update with returnUpdatedDocs true and multi false, the updated document\n *                        * For an update with returnUpdatedDocs true and multi true, the array of updated documents\n *\n * WARNING: The API was changed between v1.7.4 and v1.8, for consistency and readability reasons. Prior and including to v1.7.4,\n *          the callback signature was (err, numAffected, updated) where updated was the updated document in case of an upsert\n *          or the array of updated documents for an update if the returnUpdatedDocs option was true. That meant that the type of\n *          affectedDocuments in a non multi update depended on whether there was an upsert or not, leaving only two ways for the\n *          user to check whether an upsert had occured: checking the type of affectedDocuments or running another find query on\n *          the whole dataset to check its size. Both options being ugly, the breaking change was necessary.\n *\n * @api private Use Datastore.update which has the same signature\n */\nDatastore.prototype._update = function (query, updateQuery, options, cb) {\n  var callback\n    , self = this\n    , numReplaced = 0\n    , multi, upsert\n    , i\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n  upsert = options.upsert !== undefined ? options.upsert : false;\n\n  async.waterfall([\n  function (cb) {   // If upsert option is set, check whether we need to insert the doc\n    if (!upsert) { return cb(); }\n\n    // Need to use an internal function not tied to the executor to avoid deadlock\n    var cursor = new Cursor(self, query);\n    cursor.limit(1)._exec(function (err, docs) {\n      if (err) { return callback(err); }\n      if (docs.length === 1) {\n        return cb();\n      } else {\n        var toBeInserted;\n\n        try {\n          model.checkObject(updateQuery);\n          // updateQuery is a simple object with no modifier, use it as the document to insert\n          toBeInserted = updateQuery;\n        } catch (e) {\n          // updateQuery contains modifiers, use the find query as the base,\n          // strip it from all operators and update it according to updateQuery\n          try {\n            toBeInserted = model.modify(model.deepCopy(query, true), updateQuery);\n          } catch (err) {\n            return callback(err);\n          }\n        }\n\n        return self._insert(toBeInserted, function (err, newDoc) {\n          if (err) { return callback(err); }\n          return callback(null, 1, newDoc, true);\n        });\n      }\n    });\n  }\n  , function () {   // Perform the update\n    var modifiedDoc , modifications = [], createdAt;\n\n    self.getCandidates(query, function (err, candidates) {\n      if (err) { return callback(err); }\n\n      // Preparing update (if an error is thrown here neither the datafile nor\n      // the in-memory indexes are affected)\n      try {\n        for (i = 0; i < candidates.length; i += 1) {\n          if (model.match(candidates[i], query) && (multi || numReplaced === 0)) {\n            numReplaced += 1;\n            if (self.timestampData) { createdAt = candidates[i].createdAt; }\n            modifiedDoc = model.modify(candidates[i], updateQuery);\n            if (self.timestampData) {\n              modifiedDoc.createdAt = createdAt;\n              modifiedDoc.updatedAt = new Date();\n            }\n            modifications.push({ oldDoc: candidates[i], newDoc: modifiedDoc });\n          }\n        }\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Change the docs in memory\n      try {\n        self.updateIndexes(modifications);\n      } catch (err) {\n        return callback(err);\n      }\n\n      // Update the datafile\n      var updatedDocs = _.pluck(modifications, 'newDoc');\n      self.persistence.persistNewState(updatedDocs, function (err) {\n        if (err) { return callback(err); }\n        if (!options.returnUpdatedDocs) {\n          return callback(null, numReplaced);\n        } else {\n          var updatedDocsDC = [];\n          updatedDocs.forEach(function (doc) { updatedDocsDC.push(model.deepCopy(doc)); });\n          if (! multi) { updatedDocsDC = updatedDocsDC[0]; }\n          return callback(null, numReplaced, updatedDocsDC);\n        }\n      });\n    });\n  }]);\n};\n\nDatastore.prototype.update = function () {\n  this.executor.push({ this: this, fn: this._update, arguments: arguments });\n};\n\n\n/**\n * Remove all docs matching the query\n * For now very naive implementation (similar to update)\n * @param {Object} query\n * @param {Object} options Optional options\n *                 options.multi If true, can update multiple documents (defaults to false)\n * @param {Function} cb Optional callback, signature: err, numRemoved\n *\n * @api private Use Datastore.remove which has the same signature\n */\nDatastore.prototype._remove = function (query, options, cb) {\n  var callback\n    , self = this, numRemoved = 0, removedDocs = [], multi\n    ;\n\n  if (typeof options === 'function') { cb = options; options = {}; }\n  callback = cb || function () {};\n  multi = options.multi !== undefined ? options.multi : false;\n\n  this.getCandidates(query, true, function (err, candidates) {\n    if (err) { return callback(err); }\n\n    try {\n      candidates.forEach(function (d) {\n        if (model.match(d, query) && (multi || numRemoved === 0)) {\n          numRemoved += 1;\n          removedDocs.push({ $$deleted: true, _id: d._id });\n          self.removeFromIndexes(d);\n        }\n      });\n    } catch (err) { return callback(err); }\n\n    self.persistence.persistNewState(removedDocs, function (err) {\n      if (err) { return callback(err); }\n      return callback(null, numRemoved);\n    });\n  });\n};\n\nDatastore.prototype.remove = function () {\n  this.executor.push({ this: this, fn: this._remove, arguments: arguments });\n};\n\n\n\nmodule.exports = Datastore;\n","var Datastore = require('./lib/datastore');\n\nmodule.exports = Datastore;\n","var NedbDatastore = require('nedb')\nvar thenify = require('thenify')\n\nfunction fromInstance(nedbInstance) {\n\tvar newDB = { nedb: nedbInstance }\n\n\tvar methods = [ 'loadDatabase', 'insert', 'find', 'findOne', 'count', 'update', 'remove', 'ensureIndex', 'removeIndex' ]\n\tfor (var i = 0; i < methods.length; ++i) {\n\t\tvar m = methods[i]\n\t\tnewDB[m] = thenify(nedbInstance[m].bind(nedbInstance))\n\t}\n\n\tnewDB.cfind = function(query, projections) {\n\t\tvar cursor = nedbInstance.find(query, projections)\n\t\tcursor.exec = thenify(cursor.exec.bind(cursor))\n\t\treturn cursor\n\t}\n\n\tnewDB.cfindOne = function(query, projections) {\n\t\tvar cursor = nedbInstance.findOne(query, projections)\n\t\tcursor.exec = thenify(cursor.exec.bind(cursor))\n\t\treturn cursor\n\t}\n\n\tnewDB.ccount = function(query) {\n\t\tvar cursor = nedbInstance.count(query)\n\t\tcursor.exec = thenify(cursor.exec.bind(cursor))\n\t\treturn cursor\n\t}\n\n\treturn newDB\n}\n\nfunction datastore(options) {\n\tvar nedbInstance = new NedbDatastore(options)\n\treturn fromInstance(nedbInstance)\n}\n\n// so that import { datastore } still works:\ndatastore.datastore = datastore\ndatastore.fromInstance = fromInstance\n\nmodule.exports = datastore\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = require(\"./Event\");\nconst events_1 = require(\"events\");\nconst nedb = require(\"nedb-promise\");\nconst Snap_1 = require(\"./Snap\");\nclass DefaultEventStore extends events_1.EventEmitter {\n    constructor() {\n        super();\n        this.events = nedb();\n        this.snaps = nedb();\n        this.sagas = nedb();\n    }\n    async existSaga(sagaId) {\n        return !!await this.getSaga(sagaId);\n    }\n    async beginSaga(sagaId) {\n        const exist = await this.existSaga(sagaId);\n        if (!exist) {\n            return this.sagas.insert({ sagaId, done: false, alive: true });\n        }\n    }\n    async getSaga(sagaId) {\n        return await this.sagas.cfindOne({ sagaId, alive: true }).exec();\n    }\n    async killSaga(sagaId) {\n        return await this.sagas.update({ sagaId }, { alive: false });\n    }\n    async endSaga(sagaId) {\n        const exist = await this.existSaga(sagaId);\n        if (exist) {\n            return await this.sagas.update({ sagaId }, { done: true });\n        }\n    }\n    async findUndoneSaga() {\n        return await this.sagas.find({ done: false });\n    }\n    async createSnap(snap) {\n        return await this.snaps.insert(snap.json);\n    }\n    async saveEvents(events) {\n        events = [].concat(events);\n        const eventsJSONArr = events.map(event => {\n            return event.json || event;\n        });\n        await this.events.insert(eventsJSONArr);\n        this.emit('saved events', events);\n    }\n    async getLatestSnapshot(actorId) {\n        let data = await this.snaps.cfindOne({ actorId }).sort({ index: -1, date: -1 }).exec();\n        if (data) {\n            return Snap_1.default.parse(data);\n        }\n    }\n    async getEvents(actorId) {\n        let events = await this.events.cfind({ actorId }).sort({ index: -1, date: -1 }).exec();\n        return events.map(event => Event_1.default.parse(event));\n    }\n    async getLatestEvent(actorId) {\n        let event = await this.events.cfind({ actorId }).sort({ index: -1, date: -1 }).limit(1).exec();\n        return event.length ? Event_1.default.parse(event[0]) : null;\n    }\n    async getEventsBySnapshot(snapId) {\n        const snap = await this.getSnapshotById(snapId);\n        if (snap) {\n            let events = await this.events.cfind({\n                actorId: snap.actorId,\n                index: { '$gt': snap.latestEventIndex }\n            }).sort({ date: 1, index: 1 }).exec();\n            return events.map(event => Event_1.default.parse(event));\n        }\n    }\n    async getSnapshotByIndex(actorId, index) {\n        let snap = await this.snaps.cfindOne({ actorId, index }).exec();\n        return Snap_1.default.parse(snap);\n    }\n    // async getSnapshotByLastIndex(actorId, index) {\n    //     let snap = await this.getLatestSnapshot(actorId);\n    //     if (snap) {\n    //         if (index === 0) {\n    //             return snap;\n    //         } else {\n    //             return await this.getSnapshotByIndex(actorId, snap.index - index);\n    //         }\n    //     }\n    // }\n    async getSnapshotById(id) {\n        let snap = await this.snaps.cfindOne({ id }).exec();\n        return Snap_1.default.parse(snap);\n    }\n    async getEventById(id) {\n        let event = await this.events.cfindOne({ id }).exec();\n        if (event) {\n            return Event_1.default.parse(event);\n        }\n        else {\n            return null;\n        }\n    }\n    async findEventsBySagaId(sagaId) {\n        let events = await this.events.cfind({ sagaId }).sort({ index: -1, date: -1 }).exec();\n        return events.map(event => Event_1.default.parse(event));\n    }\n    async removeEventsBySagaId(sagaId) {\n        await this.killSaga(sagaId);\n        await this.events.remove({ sagaId });\n    }\n}\nexports.default = DefaultEventStore;\n//# sourceMappingURL=DefaultEventStore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst loadEvents = Symbol.for('loadEvents');\nfunction reborm(ActorClass, snap, events) {\n    const actor = ActorClass.parse(snap.data);\n    actor[loadEvents](events);\n    return actor;\n}\nexports.default = reborm;\n;\n//# sourceMappingURL=reborn.js.map","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Snap_1 = require(\"./Snap\");\nconst reborn_1 = require(\"./reborn\");\nconst events_1 = require(\"events\");\nconst setdata = Symbol.for(\"setdata\");\nclass Repository extends events_1.EventEmitter {\n    constructor(ActorClass, eventstore, roleMap) {\n        super();\n        this.ActorClass = ActorClass;\n        this.eventstore = eventstore;\n        this.roleMap = roleMap;\n        this.cache = new Map();\n    }\n    async create(data) {\n        const actor = new this.ActorClass(data);\n        const snap = new Snap_1.default(actor);\n        await this.eventstore.createSnap(snap);\n        this.cache.set(actor.id, actor);\n        setImmediate(() => this.emit(\"create\", actor.json));\n        return actor;\n    }\n    clear(id) {\n        if (this.cache.has(id)) {\n            this.cache.delete(id);\n            this.emit(\"clear\", id);\n        }\n    }\n    getFromCache(id) {\n        return this.cache.get(id);\n    }\n    async getHistory(actorId) {\n        const snap = await this.eventstore.getSnapshotByIndex(actorId, 0);\n        const events = await this.eventstore.getEvents(actorId);\n        if (snap) {\n            return {\n                _events: events,\n                _snap: snap,\n                _index: events.length,\n                _validateIndex(index) {\n                    return index > 0 && index <= this._events.length;\n                },\n                done: false,\n                data: reborn_1.default(this.ActorClass, snap, events).json,\n                _get(index) {\n                    if (this._validateIndex(index)) {\n                        let events = this._events.slice(0, index);\n                        this.data = reborn_1.default(this.ActorClass, this._snap, events).json;\n                        this.done = false;\n                    }\n                    else {\n                        this.done = true;\n                    }\n                    return this;\n                },\n                next() {\n                    let index = this._index++;\n                    return this._get(index);\n                },\n                prev() {\n                    let index = this._index++;\n                    return this._get(index);\n                }\n            };\n        }\n        throw new Error(\"no actor by \" + actorId);\n    }\n    async get(id) {\n        let actor = this.getFromCache(id);\n        if (actor) {\n            if (actor.json.isAlive) {\n                return actor;\n            }\n            else {\n                this.cache.delete(id);\n                return null;\n            }\n        }\n        else {\n            this.emit(\"reborn\", id);\n            let snap = await this.eventstore.getLatestSnapshot(id);\n            if (snap) {\n                const events = await this.eventstore.getEventsBySnapshot(snap.id);\n                const actor = this.ActorClass.parse(snap.data);\n                events.forEach(event => {\n                    let role = this.roleMap.get(event.roleName);\n                    let updater = actor.updater[event.type] ||\n                        actor.updater[event.method + \"Update\"] ||\n                        (role ? role.updater[event.type] || role.updater[event.method] : null);\n                    const updatedData = updater ? updater(actor.json, event) : {};\n                    actor[setdata] = Object.assign({}, actor.json, updatedData);\n                    return actor || null;\n                });\n            }\n        }\n    }\n    exist(id) {\n        return this.cache.has(id);\n    }\n    getCacheActorIds() {\n        return [...this.cache.keys()];\n    }\n}\nexports.default = Repository;\n//# sourceMappingURL=Repository.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = require(\"./Event\");\nconst uuid = require(\"uuid\").v1;\nconst uncommittedEvents = Symbol.for(\"uncommittedEvents\");\nconst setdata = Symbol.for(\"setdata\");\n/**\n * When call actor's method , then DI service object.\n */\nclass Service {\n    constructor(actor, bus, repo, getActor, createActor, method, sagaId, roleName, role) {\n        this.actor = actor;\n        this.bus = bus;\n        this.repo = repo;\n        this.getActor = getActor;\n        this.createActor = createActor;\n        this.method = method;\n        this.sagaId = sagaId;\n        this.roleName = roleName;\n        this.role = role;\n        this.lockMode = false;\n        this.sagaMode = false;\n        this.key = uuid();\n        this.applied = false;\n    }\n    apply(type, data, direct) {\n        const event = new Event_1.default(this.actor, data, type, this.method, this.sagaId, direct || false, this.roleName);\n        let updater;\n        if (type === \"remove\") {\n            updater = () => ({ isAlive: false });\n        }\n        else if (type === \"subscribe\") {\n            updater = (json, _event) => {\n                const listeners = json.listeners;\n                let { event, listenerType, listenerId, handleMethodName } = _event.data;\n                if (listeners[event]) {\n                    listeners[event][listenerId] = { handleMethodName, listenerType };\n                }\n                else {\n                    listeners[event] = { [listenerId]: { handleMethodName, listenerType } };\n                }\n                return { listeners };\n            };\n        }\n        else if (type === \"unsubscribe\") {\n            updater = (json, _event) => {\n                const listeners = json.listeners;\n                let { event, listenerId } = _event.data;\n                if (listeners[event]) {\n                    delete listeners[event][listenerId];\n                }\n                return { listeners };\n            };\n        }\n        else {\n            updater = (this.actor.updater[type] ||\n                this.actor.updater[this.method + \"Update\"] ||\n                (this.role ? this.role.updater[type] || this.role.updater[this.method] : null));\n        }\n        if (!updater)\n            return;\n        const updatedData = updater(this.actor.json, event);\n        event.updatedData = updatedData;\n        this.actor[setdata] = Object.assign({}, this.actor.json, direct ? data : {}, updatedData);\n        this.actor[uncommittedEvents] = this.actor[uncommittedEvents] || [];\n        this.actor[uncommittedEvents].push(event);\n        this.bus.publish(this.actor);\n        this.applied = true;\n        if (![\"subscribe\", \"unsubscribe\", \"_subscribe\", \"_unsubscribe\"].includes(type)) {\n            const actorType = this.actor.type;\n            (async () => {\n                const emitter = await this.get(\"ActorEventEmitter\", \"ActorEventEmitter\" + actorType);\n                if (emitter) {\n                    emitter.publish(event);\n                }\n            })();\n            let listeners = this.actor.json.listeners;\n            let handles = listeners[type];\n            let emit = async (handles) => {\n                if (handles) {\n                    for (let id in handles) {\n                        let { handleMethodName, listenerType } = handles[id];\n                        let actor = await this.get(listenerType, id);\n                        if (actor) {\n                            actor[handleMethodName](event);\n                        }\n                    }\n                }\n            };\n            emit(handles);\n            handles = listeners[\"*\"];\n            emit(handles);\n        }\n    }\n    lock(timeout) {\n        this.lockMode = true;\n        this.timeout = timeout;\n    }\n    unlock() {\n        this.lockMode = false;\n        // todo\n    }\n    sagaBegin() {\n        if (this.sagaId && !this.sagaMode) {\n            throw new Error(\"Cannot include child Saga\");\n        }\n        this.sagaMode = true;\n        this.sagaId = uuid();\n    }\n    sagaEnd() {\n        if (this.sagaMode) {\n            this.sagaMode = false;\n            this.sagaId = null;\n        }\n    }\n    async rollback() {\n        if (this.sagaMode) {\n            return await this.bus.rollback(this.sagaId);\n        }\n        else {\n            throw new Error(\"no saga\");\n        }\n    }\n    actorLock(actor) {\n        const that = this;\n        return new Promise((resolve, reject) => {\n            tryLock();\n            async function tryLock() {\n                var isLock = await actor.lock({ key: that.key, timeout: that.timeout });\n                if (isLock)\n                    resolve();\n                else {\n                    setTimeout(tryLock, 300);\n                }\n            }\n        });\n    }\n    async get(type, id) {\n        if (id === this.actor.id)\n            throw new Error(\"Don't be get self\");\n        let proxy = await this.getActor(type, id, this.sagaId || null, this.key);\n        if (!proxy)\n            return null;\n        if (this.lockMode) {\n            await this.actorLock(proxy);\n        }\n        return proxy;\n    }\n    async create(type, data) {\n        return this.createActor(...arguments, this.sagaId);\n    }\n    async subscribe(event, handleMethodName) {\n        let { actorId, actorType, type } = event;\n        if (actorId && actorType && type) {\n            let actor = await this.get(actorType, actorId);\n            if (actor) {\n                actor.subscribe(type, this.actor.type, this.actor.id, handleMethodName);\n            }\n        }\n        else if (actorType) {\n            let actor = await this.get(\"ActorEventEmitter\", \"ActorEventEmitter\" + actorType);\n            if (!actor) {\n                actor = await this.create(\"ActorEventEmitter\", { id: \"ActorEventEmitter\" + actorType });\n            }\n            await actor.subscribe(actorType, this.actor.type, this.actor.id, handleMethodName);\n        }\n    }\n    async unsubscribe(event) {\n        let { actorId, actorType, type } = event;\n        if (actorId && actorType && type) {\n            let actor = await this.get(actorType, actorId);\n            if (actor) {\n                actor.unsubscribe(type, this.actor.id);\n            }\n        }\n        else if (actorType) {\n            let actor = await this.get(\"ActorEventEmitter\", \"ActorEventEmitter\" + actorType);\n            if (actor) {\n                await actor.unsubscribe(actorType, this.actor.id);\n            }\n        }\n    }\n    async getHistory() {\n        return await this.repo.getHistory(this.actor.id);\n    }\n}\nexports.default = Service;\n//# sourceMappingURL=Service.js.map"],"sourceRoot":""}